{"slug":"convert-binary-to-octal","title":"Convert binary to octal","trackId":508,"tags":["C#","Java","JavaScript","Kotlin","TypeScript","Python","PHP"],"contributors":["pokharel-nishan","anandfresh","harshraj8843","joao-vitor-souza","Greeshma-frontier","vishal2376","iresh96"],"contentHtml":"<h2>Write a program to convert binary to octal</h2>\n<p>Binary is a base-2 number system. It uses only two digits: 0 and 1. The digits are called bits. A bit is the smallest unit of information in a computer. A bit can be either 0 or 1. A bit can be used to represent a single value, such as 0 or 1, or it can be used to represent a single state, such as on or off.</p>\n<p>Octal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.</p>\n<p>To convert a binary number to octal, we can use the following algorithm:</p>\n<ol>\n<li>Convert the binary number to decimal.</li>\n<li>Convert the decimal number to octal.</li>\n</ol>\n<pre><code>Input  : 1010\r\nOutput : 12\n</code></pre>\n<hr>\n<pre><code>using System;  \npublic class Binary\n{  \n    public static void Main()\n{       int n1, n,p=1;\n\t    int dec=0,i=1,j,d;\n        int octno=0;\n\t\t\n\n\tConsole.Write(\"Enter a binary number : \");\n    n = Convert.ToInt32(Console.ReadLine());\t\n\tn1=n;\n\tfor (j=n;j>0;j=j/10)\n\t{  \n          d = j % 10;\n            if(i==1)\n                  p=p*1;\n            else\n                 p=p*2;\n\n\t   dec=dec+(d*p);\n\t   i++;\n\t}\n \n     i=1;\n\n      for(j=dec;j>0;j=j/8)\n       {\n        octno=octno+(j % 8)*i;\n        i=i*10;\n        n=n/8;\n       }\n   \n        Console.Write(\"\\nThe equivalent Octal number : {1} \\n\\n\",n1,octno);\n}\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\npublic class ConvertBinaryToOctal{\n    public static void main(String[] args){\n        Scanner input = new Scanner(System.in);\n\n        System.out.println(\"Enter a binary number\");\n        String binaryNum = input.nextLine();\n\n        int decimalNum = Integer.parseInt(binaryNum, 2);\n        String OctalNum = Integer.toOctalString(decimalNum);\n\n        System.out.println(\"Octal Number    :       \" + OctalNum);\n\n        input.close();\n    }\n}\n</code></pre>\n<pre><code>function binaryToOctal (num) {\n   let octalValue = parseInt(num, 2).toString(8);\n   return octalValue;\n}\n\nbinaryToOctal(1010);\n\nconsole.log(\"Binary to Octal\", binaryToOctal(1010));\n</code></pre>\n<pre><code>fun main() {\n    \n    val n: Long = 101001\n    \n    var binary = n\n    var octal = 0\n    var decimal = 0\n    \n    var i = 0\n\n    while (binary.toInt() != 0) {\n        decimal += (binary % 10 * Math.pow(2.0, i.toDouble())).toInt()\n        ++i\n        binary /= 10\n    }\n\n    i = 1\n\n    while (decimal != 0) {\n        octal += decimal % 8 * i\n        decimal /= 8\n        i *= 10\n    }\n  \n    println(\"$n = $octal\")\n}\n</code></pre>\n<pre><code>const binaryToDecimal = (input: number): number => {\n  return parseInt(input.toString(), 2);\n};\n\nexport const binaryToOctal = (input: number): number => {\n  const decimal = binaryToDecimal(input);\n  return Number(decimal.toString(8));\n};\n</code></pre>\n<pre><code>binary_number = int(input(\"Enter the binary number : \"))\r\n\r\ni, j, b, octal = 0, 0, 0, 0\r\nwhile binary_number != 0:\r\n    b += (binary_number % 10) * (2**i)\r\n    i += 1\r\n    binary_number = binary_number // 10\r\n\r\nwhile b != 0:\r\n    octal += (b % 8) * (10**j)\r\n    j += 1\r\n    b = b // 10\r\n\r\nprint(\"The octal conversion of binary number is \", octal)\n</code></pre>\n<pre><code>&#x3C;?php\n\n$binary = readline();\n$possibleChars = [\"0\", \"1\"];\n\n$decimal = 0;\n\nforeach (str_split($binary) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(2, (int) (strlen($binary) - $key - 1));\n    }\n}\n\n$octal = \"\";\n\nwhile (true) {\n    $quocient = floor($decimal / 8);\n    if ($quocient &#x3C; 1) {\n        $octal .= $decimal;\n        break;\n    }\n    $remainder = $decimal % 8;\n    $decimal = $quocient;\n    $octal .= $remainder;\n}\n\necho strrev($octal) . \"\\n\";\n\n?>\n</code></pre>\n","markdown":"\r\n## Write a program to convert binary to octal\r\n\r\nBinary is a base-2 number system. It uses only two digits: 0 and 1. The digits are called bits. A bit is the smallest unit of information in a computer. A bit can be either 0 or 1. A bit can be used to represent a single value, such as 0 or 1, or it can be used to represent a single state, such as on or off.\r\n\r\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\r\n\r\nTo convert a binary number to octal, we can use the following algorithm:\r\n\r\n1. Convert the binary number to decimal.\r\n2. Convert the decimal number to octal.\r\n\r\n```txt\r\nInput  : 1010\r\nOutput : 12\r\n```\r\n\r\n---\n\n<CodeBlock slug=\"convert-binary-to-octal\" >\n\n```cs\nusing System;  \npublic class Binary\n{  \n    public static void Main()\n{       int n1, n,p=1;\n\t    int dec=0,i=1,j,d;\n        int octno=0;\n\t\t\n\n\tConsole.Write(\"Enter a binary number : \");\n    n = Convert.ToInt32(Console.ReadLine());\t\n\tn1=n;\n\tfor (j=n;j>0;j=j/10)\n\t{  \n          d = j % 10;\n            if(i==1)\n                  p=p*1;\n            else\n                 p=p*2;\n\n\t   dec=dec+(d*p);\n\t   i++;\n\t}\n \n     i=1;\n\n      for(j=dec;j>0;j=j/8)\n       {\n        octno=octno+(j % 8)*i;\n        i=i*10;\n        n=n/8;\n       }\n   \n        Console.Write(\"\\nThe equivalent Octal number : {1} \\n\\n\",n1,octno);\n}\n}\n```\n\n```java\nimport java.util.Scanner;\n\npublic class ConvertBinaryToOctal{\n    public static void main(String[] args){\n        Scanner input = new Scanner(System.in);\n\n        System.out.println(\"Enter a binary number\");\n        String binaryNum = input.nextLine();\n\n        int decimalNum = Integer.parseInt(binaryNum, 2);\n        String OctalNum = Integer.toOctalString(decimalNum);\n\n        System.out.println(\"Octal Number    :       \" + OctalNum);\n\n        input.close();\n    }\n}\n```\n\n```js\nfunction binaryToOctal (num) {\n   let octalValue = parseInt(num, 2).toString(8);\n   return octalValue;\n}\n\nbinaryToOctal(1010);\n\nconsole.log(\"Binary to Octal\", binaryToOctal(1010));\n```\n\n```kt\nfun main() {\n    \n    val n: Long = 101001\n    \n    var binary = n\n    var octal = 0\n    var decimal = 0\n    \n    var i = 0\n\n    while (binary.toInt() != 0) {\n        decimal += (binary % 10 * Math.pow(2.0, i.toDouble())).toInt()\n        ++i\n        binary /= 10\n    }\n\n    i = 1\n\n    while (decimal != 0) {\n        octal += decimal % 8 * i\n        decimal /= 8\n        i *= 10\n    }\n  \n    println(\"$n = $octal\")\n}\n```\n\n```ts\nconst binaryToDecimal = (input: number): number => {\n  return parseInt(input.toString(), 2);\n};\n\nexport const binaryToOctal = (input: number): number => {\n  const decimal = binaryToDecimal(input);\n  return Number(decimal.toString(8));\n};\n```\n\n```py\nbinary_number = int(input(\"Enter the binary number : \"))\r\n\r\ni, j, b, octal = 0, 0, 0, 0\r\nwhile binary_number != 0:\r\n    b += (binary_number % 10) * (2**i)\r\n    i += 1\r\n    binary_number = binary_number // 10\r\n\r\nwhile b != 0:\r\n    octal += (b % 8) * (10**j)\r\n    j += 1\r\n    b = b // 10\r\n\r\nprint(\"The octal conversion of binary number is \", octal)\n```\n\n```php\n<?php\n\n$binary = readline();\n$possibleChars = [\"0\", \"1\"];\n\n$decimal = 0;\n\nforeach (str_split($binary) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(2, (int) (strlen($binary) - $key - 1));\n    }\n}\n\n$octal = \"\";\n\nwhile (true) {\n    $quocient = floor($decimal / 8);\n    if ($quocient < 1) {\n        $octal .= $decimal;\n        break;\n    }\n    $remainder = $decimal % 8;\n    $decimal = $quocient;\n    $octal .= $remainder;\n}\n\necho strrev($octal) . \"\\n\";\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-26T07:37:45Z"}