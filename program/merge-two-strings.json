{"slug":"merge-two-strings","title":"Merge two strings","trackId":5423,"tags":["C","C++","C#","Java","JavaScript","Kotlin","Ruby","Swift","TypeScript","Kotlin","Python","Swift","Scala","Dart","GO","PHP","Perl","Rust"],"contributors":["harshraj8843","esivakumar18","anandfresh","tom-laplace","Coder-12-ux","james-tharit","iamtejasmane","SarthakSanjay","Varun-Dhruv","Dcastro99","dineshlalam15"],"contentHtml":"<h2>Write a program to merge two strings</h2>\n<pre><code>Input  : ABC DEF\nOutput : ABCDEF\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;string.h>\n\nint main() {\n\tchar str1[20], str2[20], merged[40];\n\tscanf(\"%s %s\", str1, str2);\n\tstrcpy(merged, str1);\n\tstrcat(merged, str2);\n\n\tprintf(\"%s\", merged);\n\treturn 0;\n}\n</code></pre>\n<pre><code>// Concatenates two strings.\n#include &#x3C;bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nstring Concat(string a, string b){\n    return a+b;\n}\nint main(){\n    string s,s2;   cin>>s>>s2;\n    cout&#x3C;&#x3C;Concat(s,s2)&#x3C;&#x3C;endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/\n</code></pre>\n<pre><code>using System;\nclass Program\n{\n    static void Main()\n    {\n        string s1 = \"ABC\";\n        string s2 = \"DEF\";\n        Console.WriteLine(string.Concat(s1, s2));\n        Console.ReadLine();\n    }\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\npublic class MergeTwoStrings {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter String 1: \");\n        String s1 = sc.nextLine();\n        System.out.print(\"Enter String 2: \");\n        String s2 = sc.nextLine();\n        System.out.println(\"Resultant String: \" +s1 + s2);\n    }\n}\n</code></pre>\n<pre><code>function mergeStrings(str1, str2) {\n  return str1 + str2;\n}\n\nconsole.log(mergeStrings('ABC', 'DEF'));\n</code></pre>\n<pre><code>fun main(args: Array&#x3C;String>) {\n    val a = \"Hello\"\n    val b = \"World\"\n    val c = a.plus(\" \").plus(b)\n    val d = a + \" \" + b\n    \n    println(c)\n    println(d)\n}\n</code></pre>\n<pre><code>def mergeStrings(str1, str2)\n   puts str1+str2;\nend\n\nmergeStrings('ABC', 'DEF')\n</code></pre>\n<pre><code>import Swift\nimport Foundation\n\nprint(\"Enter string1: \")\nvar string1 = readLine()!\n\nprint(\"Enter string2: \")\nvar string2 = readLine()!\n\nprint(string1 + string2)\n</code></pre>\n<pre><code>const MergeTwoStrings = (s1: String, s2: String): String => {\n    return s1.concat(s2.toString());\n}\nexport default MergeTwoStrings;\n</code></pre>\n<pre><code>fun main(args: Array&#x3C;String>) {\n    val a = \"Hello\"\n    val b = \"World\"\n    val c = a.plus(\" \").plus(b)\n    val d = a + \" \" + b\n    \n    println(c)\n    println(d)\n}\n</code></pre>\n<pre><code>string1 = str(input(\"Enter a string  : \"))\nstring2 = str(input(\"Enter another string : \"))\n\n\ndef mergeString(str1, str2):\n    return str1 + str2\n\n\nprint(\"Merged String : \", mergeString(string1, string2))\n</code></pre>\n<pre><code>import Swift\nimport Foundation\n\nprint(\"Enter string1: \")\nvar string1 = readLine()!\n\nprint(\"Enter string2: \")\nvar string2 = readLine()!\n\nprint(string1 + string2)\n</code></pre>\n<pre><code>import scala.io.StdIn._;\n\nobject mergeStrings {\n    def main(args:Array[String]):Unit={\n        println(\"Enter the String1 : \");\n        var string1 = readLine();\n        println(\"Enter the String2 : \");\n        var string2 = readLine();\n        var mergedString = string1+string2;\n        println(\"Merged String : \"+mergedString);\n    }\n}\n</code></pre>\n<pre><code>String _mergeStrings(String str1, String str2) {\n  return str1 + str2;\n}\n\nvoid main() {\n  print(_mergeStrings('ABC', 'DEF'));\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc merge(a, b string) string {\n\treturn a + b\n}\nfunc main() {\n\tvar str1 string\n\tvar str2 string\n\n\tfmt.Println(\"Enter two strings:\")\n\tfmt.Scanln(&#x26;str1)\n\tfmt.Scanln(&#x26;str2)\n\n\tfmt.Println(merge(str1, str2))\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction mergeStrings($str1, $str2){\n  return $str1.$str2;\n}\n\necho mergeStrings('ABC', 'DEF');\n\n?>\n</code></pre>\n<pre><code>$str1 = \"ABC\";\n$str2 = \"DEF\";\n\n$merge = $str1.$str2;\n\nprint $merge;\n</code></pre>\n<pre><code>fn merge_two_strings(str1: &#x26;str, str2: &#x26;str) -> String {\n    let mut str3 = String::new();\n    str3.push_str(str1);\n    str3.push_str(str2);\n    return str3\n}\n\nfn main() {\n    println!(\"{}\", merge_two_strings(\"ABC\", \"DEF\"));\n}\n</code></pre>\n","markdown":"\n## Write a program to merge two strings\n\n```txt\nInput  : ABC DEF\nOutput : ABCDEF\n```\n\n---\n\n<CodeBlock slug=\"merge-two-strings\" >\n\n```c\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n\tchar str1[20], str2[20], merged[40];\n\tscanf(\"%s %s\", str1, str2);\n\tstrcpy(merged, str1);\n\tstrcat(merged, str2);\n\n\tprintf(\"%s\", merged);\n\treturn 0;\n}\n```\n\n```cpp\n// Concatenates two strings.\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nstring Concat(string a, string b){\n    return a+b;\n}\nint main(){\n    string s,s2;   cin>>s>>s2;\n    cout<<Concat(s,s2)<<endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/\n```\n\n```cs\nusing System;\nclass Program\n{\n    static void Main()\n    {\n        string s1 = \"ABC\";\n        string s2 = \"DEF\";\n        Console.WriteLine(string.Concat(s1, s2));\n        Console.ReadLine();\n    }\n}\n```\n\n```java\nimport java.util.Scanner;\n\npublic class MergeTwoStrings {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter String 1: \");\n        String s1 = sc.nextLine();\n        System.out.print(\"Enter String 2: \");\n        String s2 = sc.nextLine();\n        System.out.println(\"Resultant String: \" +s1 + s2);\n    }\n}\n```\n\n```js\nfunction mergeStrings(str1, str2) {\n  return str1 + str2;\n}\n\nconsole.log(mergeStrings('ABC', 'DEF'));\n```\n\n```kt\nfun main(args: Array<String>) {\n    val a = \"Hello\"\n    val b = \"World\"\n    val c = a.plus(\" \").plus(b)\n    val d = a + \" \" + b\n    \n    println(c)\n    println(d)\n}\n```\n\n```rb\ndef mergeStrings(str1, str2)\n   puts str1+str2;\nend\n\nmergeStrings('ABC', 'DEF')\n```\n\n```swift\nimport Swift\nimport Foundation\n\nprint(\"Enter string1: \")\nvar string1 = readLine()!\n\nprint(\"Enter string2: \")\nvar string2 = readLine()!\n\nprint(string1 + string2)\n```\n\n```ts\nconst MergeTwoStrings = (s1: String, s2: String): String => {\n    return s1.concat(s2.toString());\n}\nexport default MergeTwoStrings;\n```\n\n```kt\nfun main(args: Array<String>) {\n    val a = \"Hello\"\n    val b = \"World\"\n    val c = a.plus(\" \").plus(b)\n    val d = a + \" \" + b\n    \n    println(c)\n    println(d)\n}\n```\n\n```py\nstring1 = str(input(\"Enter a string  : \"))\nstring2 = str(input(\"Enter another string : \"))\n\n\ndef mergeString(str1, str2):\n    return str1 + str2\n\n\nprint(\"Merged String : \", mergeString(string1, string2))\n```\n\n```swift\nimport Swift\nimport Foundation\n\nprint(\"Enter string1: \")\nvar string1 = readLine()!\n\nprint(\"Enter string2: \")\nvar string2 = readLine()!\n\nprint(string1 + string2)\n```\n\n```scala\nimport scala.io.StdIn._;\n\nobject mergeStrings {\n    def main(args:Array[String]):Unit={\n        println(\"Enter the String1 : \");\n        var string1 = readLine();\n        println(\"Enter the String2 : \");\n        var string2 = readLine();\n        var mergedString = string1+string2;\n        println(\"Merged String : \"+mergedString);\n    }\n}\n```\n\n```dart\nString _mergeStrings(String str1, String str2) {\n  return str1 + str2;\n}\n\nvoid main() {\n  print(_mergeStrings('ABC', 'DEF'));\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc merge(a, b string) string {\n\treturn a + b\n}\nfunc main() {\n\tvar str1 string\n\tvar str2 string\n\n\tfmt.Println(\"Enter two strings:\")\n\tfmt.Scanln(&str1)\n\tfmt.Scanln(&str2)\n\n\tfmt.Println(merge(str1, str2))\n}\n```\n\n```php\n<?php\n\nfunction mergeStrings($str1, $str2){\n  return $str1.$str2;\n}\n\necho mergeStrings('ABC', 'DEF');\n\n?>\n```\n\n```pl\n$str1 = \"ABC\";\n$str2 = \"DEF\";\n\n$merge = $str1.$str2;\n\nprint $merge;\n```\n\n```rs\nfn merge_two_strings(str1: &str, str2: &str) -> String {\n    let mut str3 = String::new();\n    str3.push_str(str1);\n    str3.push_str(str2);\n    return str3\n}\n\nfn main() {\n    println!(\"{}\", merge_two_strings(\"ABC\", \"DEF\"));\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-06T04:39:58Z"}