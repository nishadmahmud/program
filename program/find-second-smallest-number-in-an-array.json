{"slug":"find-second-smallest-number-in-an-array","title":"Find second smallest number in an array","trackId":4476,"tags":["C","C++","C#","Java","JavaScript","Ruby","TypeScript","Python","Scala","GO","PHP"],"contributors":["vedantpople4","orimiles5","anandfresh","harshraj8843","sharvil1205","joao-vitor-souza","codingkush","manny-uncharted","danveb","PraaneshSelvaraj"],"contentHtml":"<h2>Write a program to find second smallest number in an array</h2>\n<pre><code>Input  : [1, 2, 3, 4, 5]\nOutput : 2\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;string.h>\n \nmain()\n{\n    int smallest, secondsmallest;\n    int array[100], size, i;\n    printf(\"\\n How many elements do you want to enter: \");\n    scanf(\"%d\", &#x26;size);\n    printf(\"\\nEnter %d elements: \", size);\n    for (i = 0 ; i &#x3C; size; i++)\n        scanf(\"%d\", &#x26;array[i]);\n    if (array[0] &#x3C; array[1]) {\n        smallest = array[0];\n        secondsmallest = array[1];\n    }\n    else {\n      smallest = array[1];\n      secondsmallest = array[0];\n    }\n    for (i = 2; i &#x3C; size; i++) {\n        if (array[i] &#x3C; smallest) {\n        secondsmallest = smallest;\n        smallest = array[i];\n        }\n        else if (array[i] &#x3C; secondsmallest) {\n            secondsmallest = array[i];\n        }\n    }\n    printf(\" \\nSecond smallest element is %d\", secondsmallest);\n}\n</code></pre>\n<pre><code>/* C++ program to find second number number in array */\n#include &#x3C;iostream>\nusing namespace std;\nint main()\n{\n    int size;\n    cout&#x3C;&#x3C;\"Enter the size of array: \";\n    cin>>size;\n    int array[size];                            // array declaration\n\n    for(int i=0;i&#x3C;size;i++)\n        cin>>array[i];                          // input array values\n\n    int smallest=2147483647;                    // maximum integer values\n    int secondsmall=2147483647;\n\n    for(int i=0;i&#x3C;size;i++){                    // logic for smallest and second smallest value\n        if(smallest>array[i]){\n            secondsmall=smallest;\n            smallest=array[i];\n        }\n        if(secondsmall>array[i]&#x26;&#x26; array[i]>smallest)\n            secondsmall=array[i];\n    }\n\n    cout&#x3C;&#x3C;\"The second smallest number present in given array is \"&#x3C;&#x3C;secondsmall;\n    return 0;\n}\n</code></pre>\n<pre><code>using System;\nnamespace SecondSmallest \n{\n    class Program {       \n        static void Main(string[] args)\n        {\n            int min1, min2, i, n;\n            int[] arr = new int[55];\n\n            Console.Write(\"Enter the Size of Array : \");\n            n = int.Parse(Console.ReadLine());\n\n            Console.WriteLine(\"Enter \" + n + \" Elements : \");\n            for(i=0;i&#x3C;n;i++)\n            {\n                arr[i] = int.Parse(Console.ReadLine());\n            }\n            if(arr[0]&#x3C;arr[1])\n            {\n                min1 = arr[0];\n                min2 = arr[1];\n            }\n            else\n            {\n                min1 = arr[1];\n                min2 = arr[0];\n            }\n            for(i=2;i&#x3C;n;i++)\n            {\n                if(arr[i]&#x3C;min1)\n                {\n                    min2 = min1;\n                    min1 = arr[i];\n                }\n                else if(arr[i]&#x3C;min2)\n                {\n                    min2 = arr[i];\n                }\n            }\n            Console.WriteLine(\"Second Smallest Element :\" + min2);            \n        }       \n    }\n}\n</code></pre>\n<pre><code>import java.util.*;\nclass secondSmallest\n{\n    public static void main(String[] args) \n\t{\n        Scanner sc = new Scanner(System.in);\n\t\tSystem.out.print(\"Enter the number of elements in the array: \");\n\t\tint n=sc.nextInt();\n\t\tSystem.out.print(\"Enter \" + n + \" elements: \");\n\t  \tint[] arr = new int[n];\n\t  \t\n\t\tfor(int i = 0; i &#x3C; n; i++) arr[i]=sc.nextInt();\n\n      \tif(n&#x3C;2) System.out.println(\"Invalid input: Array size less than 2\");\n      \telse\n      \t{\n        \tint small = Integer.MAX_VALUE;\n\t    \tint second_small = Integer.MAX_VALUE;\n\t    \n\t    \tfor (int i = 0; i &#x3C; n; i++)\n\t    \t{\n\t        \tif (arr[i] &#x3C;= small)\n\t        \t{\n\t\t        \tsecond_small = small;\n\t\t        \tsmall = arr[i];\n\t       \t \t}\n\t        \telse if (arr[i] &#x3C;= second_small &#x26;&#x26; arr[i] >= small)\n\t        \t{\n\t\t        \tsecond_small = arr[i];\n\t       \t \t}\n\t    \t}\n        \tSystem.out.print(\"Second smallest element of the array: \" + second_small);\n        }        \n    }\n}\n</code></pre>\n<pre><code>/* Problem: Write a JavaScript program to find second smallest number in an array \n\nnums = [1, 2, 3, 4, 5]\noutput = 2\n\nnums = [55, 3, 1, -4, 109, 7]\noutput = 1\n\nBrute Force\n- use array sort method that returns an array in increasing order\n- return the element at the 1st index (second smallest) \n\nPseudocode\n- edge case: if input array is empty we return 0\n- manually sort input array in ascending order\n- return element at 1st index\n\nTime: O(n log n) for manually sorting the input array\nSpace: O(1) no extra memory needed \n\n===\n\nBetter Approach \n- perform 2 loops over input array where we check for the first smallest and second smallest numbers\n- key is to initialize the smallest numbers as Infinity so any number we get from array will become smaller than Infinity\n\nPseudocode\n- edge case: if input array is empty we return 0\n- initialize firstSmallest as Infinity \n- initialize secondSmallest as Infinity\n- iterate over input array once \n- check: if current element is smaller than firstSmallest ? \n-- set firstSmallest as current element\n- iterate over input array again \n- check: if current element is smaller than secondSmallest &#x26;&#x26; current element is greater than firstSmallest ? \n-- set secondSmallest as current element \n- return secondSmallest \n\nTime: O(n) we iterate over input array twice at O(2n) -> O(n)\nSpace: O(1) no extra memory needed \n\n*/ \n\n// function findSecondSmallestNumberInAnArray(nums) {\n//     // edge case: if input array is empty we return 0\n//     if(nums.length === 0) return 0; \n//     nums.sort((a, b) => a - b); \n//     return nums[1]; \n// };\n\nfunction findSecondSmallestNumberInAnArray(nums) {\n    if(nums.length === 0) return 0; \n    let firstSmallest = Infinity; \n    let secondSmallest = Infinity; \n    for(let i = 0; i &#x3C; nums.length; i++) {\n        if(nums[i] &#x3C; firstSmallest) {\n            firstSmallest = nums[i]; \n        }; \n    }; \n    for(let i = 0; i &#x3C; nums.length; i++) {\n        if(nums[i] &#x3C; secondSmallest &#x26;&#x26; nums[i] > firstSmallest) {\n            secondSmallest = nums[i]; \n        }; \n    };\n    return secondSmallest;\n};\n\nconsole.log(findSecondSmallestNumberInAnArray([1,2,3,4,5]));\n</code></pre>\n<pre><code>def second_smallest_element(arr)\n    arr = arr.sort\n    return arr[1]\nend\n\narr = [5,3,1,4,2]\nprint second_smallest_element(arr)\n</code></pre>\n<pre><code>function findSecondSmallestNumberInAnArrayTs(numbersArr: number[]): number {\n  let firstSmallest: number = Infinity;\n  let secondSmallest: number = Infinity;\n\n  numbersArr.forEach((num: number) => {\n    if (num &#x3C; firstSmallest) {\n      secondSmallest = firstSmallest;\n      firstSmallest = num;\n    } else if (num &#x3C; secondSmallest &#x26;&#x26; num > firstSmallest) {\n      secondSmallest = num;\n    }\n  });\n\n  return secondSmallest;\n}\n</code></pre>\n<pre><code>def find_len(n):\n    l = [input(f\"Element {i + 1}: \") for i in range(n)]\n    l.sort()\n    print(\"\\nSecond smallest element is:\", l[1])\n\n\nsize_list = int(input(\"What's the size of the list: \"))\nfind_len(size_list)\n</code></pre>\n<pre><code>object Scala_Array {\n\n  def main(args: Array[String]): Unit = {\n    val arr = Array(1, 2, 3, 4, 5);\n    println(\"Original array :\")\n    for (x &#x3C;- arr) {\n      print(s\"${x}, \")\n    }\n    var first_element, second_element, arr_size = arr.length;\n    if (arr_size &#x3C; 2) {\n      println(\"\\nArray size less than two.\");\n    } else {\n      first_element = Int.MaxValue\n      second_element = Int.MaxValue\n\n      for (i &#x3C;- 0 to arr_size - 1) {\n        if (arr(i) &#x3C; first_element) {\n          second_element = first_element;\n          first_element = arr(i);\n        }\n\n        else if (arr(i) &#x3C; second_element &#x26;&#x26; arr(i) != first_element)\n          second_element = arr(i);\n      }\n      if (second_element == Integer.MAX_VALUE)\n        println(\"\\nNo second smallest element.\");\n      else\n        println(\n          s\"\\nThe second smallest element is : ${second_element}\"\n        );\n    }\n  }\n}\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tseries := []int{1, -2, 4, 11, 16, 7, 18, 9}\n\tsort.Sort(sort.IntSlice(series))\n\tfmt.Println(series[1])\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction secondSmallest($arr) {\n   sort($arr);\n   return $arr[1];\n}\n\necho secondSmallest([1,2,3,4,5]);\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to find second smallest number in an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 2\n```\n\n---\n\n<CodeBlock slug=\"find-second-smallest-number-in-an-array\" >\n\n```c\n#include <stdio.h>\n#include <string.h>\n \nmain()\n{\n    int smallest, secondsmallest;\n    int array[100], size, i;\n    printf(\"\\n How many elements do you want to enter: \");\n    scanf(\"%d\", &size);\n    printf(\"\\nEnter %d elements: \", size);\n    for (i = 0 ; i < size; i++)\n        scanf(\"%d\", &array[i]);\n    if (array[0] < array[1]) {\n        smallest = array[0];\n        secondsmallest = array[1];\n    }\n    else {\n      smallest = array[1];\n      secondsmallest = array[0];\n    }\n    for (i = 2; i < size; i++) {\n        if (array[i] < smallest) {\n        secondsmallest = smallest;\n        smallest = array[i];\n        }\n        else if (array[i] < secondsmallest) {\n            secondsmallest = array[i];\n        }\n    }\n    printf(\" \\nSecond smallest element is %d\", secondsmallest);\n}\n```\n\n```cpp\n/* C++ program to find second number number in array */\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int size;\n    cout<<\"Enter the size of array: \";\n    cin>>size;\n    int array[size];                            // array declaration\n\n    for(int i=0;i<size;i++)\n        cin>>array[i];                          // input array values\n\n    int smallest=2147483647;                    // maximum integer values\n    int secondsmall=2147483647;\n\n    for(int i=0;i<size;i++){                    // logic for smallest and second smallest value\n        if(smallest>array[i]){\n            secondsmall=smallest;\n            smallest=array[i];\n        }\n        if(secondsmall>array[i]&& array[i]>smallest)\n            secondsmall=array[i];\n    }\n\n    cout<<\"The second smallest number present in given array is \"<<secondsmall;\n    return 0;\n}\n```\n\n```cs\nusing System;\nnamespace SecondSmallest \n{\n    class Program {       \n        static void Main(string[] args)\n        {\n            int min1, min2, i, n;\n            int[] arr = new int[55];\n\n            Console.Write(\"Enter the Size of Array : \");\n            n = int.Parse(Console.ReadLine());\n\n            Console.WriteLine(\"Enter \" + n + \" Elements : \");\n            for(i=0;i<n;i++)\n            {\n                arr[i] = int.Parse(Console.ReadLine());\n            }\n            if(arr[0]<arr[1])\n            {\n                min1 = arr[0];\n                min2 = arr[1];\n            }\n            else\n            {\n                min1 = arr[1];\n                min2 = arr[0];\n            }\n            for(i=2;i<n;i++)\n            {\n                if(arr[i]<min1)\n                {\n                    min2 = min1;\n                    min1 = arr[i];\n                }\n                else if(arr[i]<min2)\n                {\n                    min2 = arr[i];\n                }\n            }\n            Console.WriteLine(\"Second Smallest Element :\" + min2);            \n        }       \n    }\n}\n```\n\n```java\nimport java.util.*;\nclass secondSmallest\n{\n    public static void main(String[] args) \n\t{\n        Scanner sc = new Scanner(System.in);\n\t\tSystem.out.print(\"Enter the number of elements in the array: \");\n\t\tint n=sc.nextInt();\n\t\tSystem.out.print(\"Enter \" + n + \" elements: \");\n\t  \tint[] arr = new int[n];\n\t  \t\n\t\tfor(int i = 0; i < n; i++) arr[i]=sc.nextInt();\n\n      \tif(n<2) System.out.println(\"Invalid input: Array size less than 2\");\n      \telse\n      \t{\n        \tint small = Integer.MAX_VALUE;\n\t    \tint second_small = Integer.MAX_VALUE;\n\t    \n\t    \tfor (int i = 0; i < n; i++)\n\t    \t{\n\t        \tif (arr[i] <= small)\n\t        \t{\n\t\t        \tsecond_small = small;\n\t\t        \tsmall = arr[i];\n\t       \t \t}\n\t        \telse if (arr[i] <= second_small && arr[i] >= small)\n\t        \t{\n\t\t        \tsecond_small = arr[i];\n\t       \t \t}\n\t    \t}\n        \tSystem.out.print(\"Second smallest element of the array: \" + second_small);\n        }        \n    }\n}\n```\n\n```js\n/* Problem: Write a JavaScript program to find second smallest number in an array \n\nnums = [1, 2, 3, 4, 5]\noutput = 2\n\nnums = [55, 3, 1, -4, 109, 7]\noutput = 1\n\nBrute Force\n- use array sort method that returns an array in increasing order\n- return the element at the 1st index (second smallest) \n\nPseudocode\n- edge case: if input array is empty we return 0\n- manually sort input array in ascending order\n- return element at 1st index\n\nTime: O(n log n) for manually sorting the input array\nSpace: O(1) no extra memory needed \n\n===\n\nBetter Approach \n- perform 2 loops over input array where we check for the first smallest and second smallest numbers\n- key is to initialize the smallest numbers as Infinity so any number we get from array will become smaller than Infinity\n\nPseudocode\n- edge case: if input array is empty we return 0\n- initialize firstSmallest as Infinity \n- initialize secondSmallest as Infinity\n- iterate over input array once \n- check: if current element is smaller than firstSmallest ? \n-- set firstSmallest as current element\n- iterate over input array again \n- check: if current element is smaller than secondSmallest && current element is greater than firstSmallest ? \n-- set secondSmallest as current element \n- return secondSmallest \n\nTime: O(n) we iterate over input array twice at O(2n) -> O(n)\nSpace: O(1) no extra memory needed \n\n*/ \n\n// function findSecondSmallestNumberInAnArray(nums) {\n//     // edge case: if input array is empty we return 0\n//     if(nums.length === 0) return 0; \n//     nums.sort((a, b) => a - b); \n//     return nums[1]; \n// };\n\nfunction findSecondSmallestNumberInAnArray(nums) {\n    if(nums.length === 0) return 0; \n    let firstSmallest = Infinity; \n    let secondSmallest = Infinity; \n    for(let i = 0; i < nums.length; i++) {\n        if(nums[i] < firstSmallest) {\n            firstSmallest = nums[i]; \n        }; \n    }; \n    for(let i = 0; i < nums.length; i++) {\n        if(nums[i] < secondSmallest && nums[i] > firstSmallest) {\n            secondSmallest = nums[i]; \n        }; \n    };\n    return secondSmallest;\n};\n\nconsole.log(findSecondSmallestNumberInAnArray([1,2,3,4,5]));\n```\n\n```rb\ndef second_smallest_element(arr)\n    arr = arr.sort\n    return arr[1]\nend\n\narr = [5,3,1,4,2]\nprint second_smallest_element(arr)\n```\n\n```ts\nfunction findSecondSmallestNumberInAnArrayTs(numbersArr: number[]): number {\n  let firstSmallest: number = Infinity;\n  let secondSmallest: number = Infinity;\n\n  numbersArr.forEach((num: number) => {\n    if (num < firstSmallest) {\n      secondSmallest = firstSmallest;\n      firstSmallest = num;\n    } else if (num < secondSmallest && num > firstSmallest) {\n      secondSmallest = num;\n    }\n  });\n\n  return secondSmallest;\n}\n```\n\n```py\ndef find_len(n):\n    l = [input(f\"Element {i + 1}: \") for i in range(n)]\n    l.sort()\n    print(\"\\nSecond smallest element is:\", l[1])\n\n\nsize_list = int(input(\"What's the size of the list: \"))\nfind_len(size_list)\n```\n\n```scala\nobject Scala_Array {\n\n  def main(args: Array[String]): Unit = {\n    val arr = Array(1, 2, 3, 4, 5);\n    println(\"Original array :\")\n    for (x <- arr) {\n      print(s\"${x}, \")\n    }\n    var first_element, second_element, arr_size = arr.length;\n    if (arr_size < 2) {\n      println(\"\\nArray size less than two.\");\n    } else {\n      first_element = Int.MaxValue\n      second_element = Int.MaxValue\n\n      for (i <- 0 to arr_size - 1) {\n        if (arr(i) < first_element) {\n          second_element = first_element;\n          first_element = arr(i);\n        }\n\n        else if (arr(i) < second_element && arr(i) != first_element)\n          second_element = arr(i);\n      }\n      if (second_element == Integer.MAX_VALUE)\n        println(\"\\nNo second smallest element.\");\n      else\n        println(\n          s\"\\nThe second smallest element is : ${second_element}\"\n        );\n    }\n  }\n}\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tseries := []int{1, -2, 4, 11, 16, 7, 18, 9}\n\tsort.Sort(sort.IntSlice(series))\n\tfmt.Println(series[1])\n}\n```\n\n```php\n<?php\n\nfunction secondSmallest($arr) {\n   sort($arr);\n   return $arr[1];\n}\n\necho secondSmallest([1,2,3,4,5]);\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-24T05:04:46Z"}