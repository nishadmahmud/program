{"slug":"find-the-average-of-all-numbers-in-an-array","title":"Find the average of all numbers in an array","trackId":4908,"tags":["C","C++","C#","Java","JavaScript","Ruby","TypeScript","Python","Scala","GO","PHP"],"contributors":["pokharel-nishan","harshraj8843","anandfresh","shashankgurunaga1","vedantpople4","Osher160","jfinley6","dineshlalam15","Varun-Dhruv"],"contentHtml":"<h2>Write a program to find the average of all numbers in an array</h2>\n<pre><code>Input  : [1, 2, 3, 4, 5]\nOutput : 3\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nint main() {\n    int n, i;\n    float sum = 0.0, avg;\n\n    printf(\"Enter the number of elements in the array: \");\n    scanf(\"%d\", &#x26;n);\n\n    int arr[n];\n    printf(\"Enter the elements of the array:\\n\");\n\n    for(i = 0; i &#x3C; n; i++) {\n        scanf(\"%d\", &#x26;arr[i]);\n        sum += arr[i];\n    }\n\n    avg = sum / n;\n\n    printf(\"The average of the elements in the array is: %f\", avg);\n    \n    return 0;\n}\n</code></pre>\n<pre><code>/****************************************************************************\n*\tProject:\tFindTheAverageOfAllNumbersInAnArray\t\t\t\t\t\t\t\t\t                *\n*\tFile:\t\tFindTheAverageOfAllNumbersInAnArray.cpp                    \t\t\t\t\t       \t*\n*\tDate: \t\t2023-01-31\t\t\t\t\t\t\t\t\t        \t\t*\n*\tVersion: \t1.00\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\n****************************************************************************/\n#include &#x3C;iostream> // cout,cin\n#include &#x3C;vector>  // vector\n\n/****************************************************************************/\nint FindTheAverageOfAllNumbersInAnArray(std::vector&#x3C;int> arr);\n/****************************************************************************/\nint main()\n{\n\n    std::size_t size;\n\n    std::cout &#x3C;&#x3C; \"enter size of arr\" &#x3C;&#x3C; std::endl;\n    std::cin >> size;\n\n    std::vector&#x3C;int> arr;\n\n    arr.resize(size); // resize to save time\n\n    for(std::size_t i = 0; i &#x3C; size; ++i)\n    {\n        std::cout &#x3C;&#x3C; \"enter element \" &#x3C;&#x3C; i &#x3C;&#x3C; \" of arr\" &#x3C;&#x3C; std::endl;\n        std::cin >> arr[i];\n    }\n\n    std::cout &#x3C;&#x3C; \"Average of all nums in the arr: \" &#x3C;&#x3C; FindTheAverageOfAllNumbersInAnArray(arr);\n\n    return 0;\n}\n/****************************************************************************/\nint FindTheAverageOfAllNumbersInAnArray(std::vector&#x3C;int> arr)\n{\n    int res = 0;\n\n    for(std::size_t i = 0; i &#x3C; arr.size(); ++i)\n    {\n        res += arr[i];\n    }\n\n    res /= arr.size();\n\n    return res;\n}\n/****************************************************************************/\n</code></pre>\n<pre><code>using System;\nusing System.Linq;\nclass Average {\n   static void Main() {\n      var arr = new int[] { 1,2,3,4,5 };\n      double avg = Queryable.Average(arr.AsQueryable());  \n      Console.WriteLine(\"Average : \"+avg);\n   }\n}\n</code></pre>\n<pre><code>public class FindTheAverageOfAllNumbersInAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        System.out.println(average(arr));\n    }\n    static int average(int [] nums){\n        int sum = 0;\n        for(int element: nums){\n            sum += element;\n        } \n      return sum/nums.length;\n    }\n}\n</code></pre>\n<pre><code>const averageOfNumbers = (arr) => {\n return arr.reduce((a,v)=>a + v) / arr.length;\n}\n\nconsole.log(averageOfNumbers([1,2,3,4,5]))\n</code></pre>\n<pre><code>def findTheAverageOfAllNumbersInAnArray numArray\n    average = numArray.reduce(:+).to_f / numArray.count\n    puts average.to_s.chomp(\".0\")\nend\n\nfindTheAverageOfAllNumbersInAnArray [1,2,3,4,5]\n</code></pre>\n<pre><code>const FindTheAverageOfAllNumbersInAnArray = (nums: number[]): number => {\n    let sum: number = 0\n    for (let i: number = 0; i &#x3C; nums.length; i++) {\n        sum += nums[i];\n    }\n    let avg: number = parseFloat((sum / nums.length).toFixed(2));\n    console.log(avg);\n    return avg;\n}\nexport default FindTheAverageOfAllNumbersInAnArray;\n</code></pre>\n<pre><code>def listAverage(array, n1):\n    arraysum = 0\n    for j in range(n1):\n        arraysum += array[j]\n    avg = arraysum / (n1)\n    return avg\n\n\n###########  Main Program ########################\n\nn = int(input(\"Enter the number of elements in the array\"))\narr = []  # Initializing an empty array\nfor i in range(n):\n    a = int(input(\"Enter  the element value :\"))\n    arr.append(a)\nres = listAverage(arr, n)\nprint(\"The average of all the elements in the list is:\", res)\n</code></pre>\n<pre><code>object arrayAverage {\n    def main(args:Array[String]):Unit={\n        val nums: List[Int] = List(1, 2, 3, 4, 5); \n        var total = 0.0;      \n        for ( i &#x3C;- 0 to (nums.length - 1)) {\n         total += nums(i);\n        }\n        val result = \n        println(\"Array Average : \"+total/nums.length);\n    }\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tarray := []int{1, 2, 5, 3, 6, 4, 7, 8, 9, 10}\n\tn := len(array)\n\tsum := 0\n\tfor i := 0; i &#x3C; n; i++ {\n\t\tsum += (array[i])\n\t}\n\tavg := (float64(sum)) / (float64(n))\n\tfmt.Println(avg)\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction averageOfArray($arr) {\n\treturn array_sum($arr)/sizeof($arr);\n}\n\necho averageOfArray([1,2,3,4,5])\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to find the average of all numbers in an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 3\n```\n\n---\n\n<CodeBlock slug=\"find-the-average-of-all-numbers-in-an-array\" >\n\n```c\n#include <stdio.h>\n\nint main() {\n    int n, i;\n    float sum = 0.0, avg;\n\n    printf(\"Enter the number of elements in the array: \");\n    scanf(\"%d\", &n);\n\n    int arr[n];\n    printf(\"Enter the elements of the array:\\n\");\n\n    for(i = 0; i < n; i++) {\n        scanf(\"%d\", &arr[i]);\n        sum += arr[i];\n    }\n\n    avg = sum / n;\n\n    printf(\"The average of the elements in the array is: %f\", avg);\n    \n    return 0;\n}\n```\n\n```cpp\n/****************************************************************************\n*\tProject:\tFindTheAverageOfAllNumbersInAnArray\t\t\t\t\t\t\t\t\t                *\n*\tFile:\t\tFindTheAverageOfAllNumbersInAnArray.cpp                    \t\t\t\t\t       \t*\n*\tDate: \t\t2023-01-31\t\t\t\t\t\t\t\t\t        \t\t*\n*\tVersion: \t1.00\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\n****************************************************************************/\n#include <iostream> // cout,cin\n#include <vector>  // vector\n\n/****************************************************************************/\nint FindTheAverageOfAllNumbersInAnArray(std::vector<int> arr);\n/****************************************************************************/\nint main()\n{\n\n    std::size_t size;\n\n    std::cout << \"enter size of arr\" << std::endl;\n    std::cin >> size;\n\n    std::vector<int> arr;\n\n    arr.resize(size); // resize to save time\n\n    for(std::size_t i = 0; i < size; ++i)\n    {\n        std::cout << \"enter element \" << i << \" of arr\" << std::endl;\n        std::cin >> arr[i];\n    }\n\n    std::cout << \"Average of all nums in the arr: \" << FindTheAverageOfAllNumbersInAnArray(arr);\n\n    return 0;\n}\n/****************************************************************************/\nint FindTheAverageOfAllNumbersInAnArray(std::vector<int> arr)\n{\n    int res = 0;\n\n    for(std::size_t i = 0; i < arr.size(); ++i)\n    {\n        res += arr[i];\n    }\n\n    res /= arr.size();\n\n    return res;\n}\n/****************************************************************************/\n```\n\n```cs\nusing System;\nusing System.Linq;\nclass Average {\n   static void Main() {\n      var arr = new int[] { 1,2,3,4,5 };\n      double avg = Queryable.Average(arr.AsQueryable());  \n      Console.WriteLine(\"Average : \"+avg);\n   }\n}\n```\n\n```java\npublic class FindTheAverageOfAllNumbersInAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        System.out.println(average(arr));\n    }\n    static int average(int [] nums){\n        int sum = 0;\n        for(int element: nums){\n            sum += element;\n        } \n      return sum/nums.length;\n    }\n}\n```\n\n```js\nconst averageOfNumbers = (arr) => {\n return arr.reduce((a,v)=>a + v) / arr.length;\n}\n\nconsole.log(averageOfNumbers([1,2,3,4,5]))\n```\n\n```rb\ndef findTheAverageOfAllNumbersInAnArray numArray\n    average = numArray.reduce(:+).to_f / numArray.count\n    puts average.to_s.chomp(\".0\")\nend\n\nfindTheAverageOfAllNumbersInAnArray [1,2,3,4,5]\n```\n\n```ts\nconst FindTheAverageOfAllNumbersInAnArray = (nums: number[]): number => {\n    let sum: number = 0\n    for (let i: number = 0; i < nums.length; i++) {\n        sum += nums[i];\n    }\n    let avg: number = parseFloat((sum / nums.length).toFixed(2));\n    console.log(avg);\n    return avg;\n}\nexport default FindTheAverageOfAllNumbersInAnArray;\n```\n\n```py\ndef listAverage(array, n1):\n    arraysum = 0\n    for j in range(n1):\n        arraysum += array[j]\n    avg = arraysum / (n1)\n    return avg\n\n\n###########  Main Program ########################\n\nn = int(input(\"Enter the number of elements in the array\"))\narr = []  # Initializing an empty array\nfor i in range(n):\n    a = int(input(\"Enter  the element value :\"))\n    arr.append(a)\nres = listAverage(arr, n)\nprint(\"The average of all the elements in the list is:\", res)\n```\n\n```scala\nobject arrayAverage {\n    def main(args:Array[String]):Unit={\n        val nums: List[Int] = List(1, 2, 3, 4, 5); \n        var total = 0.0;      \n        for ( i <- 0 to (nums.length - 1)) {\n         total += nums(i);\n        }\n        val result = \n        println(\"Array Average : \"+total/nums.length);\n    }\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tarray := []int{1, 2, 5, 3, 6, 4, 7, 8, 9, 10}\n\tn := len(array)\n\tsum := 0\n\tfor i := 0; i < n; i++ {\n\t\tsum += (array[i])\n\t}\n\tavg := (float64(sum)) / (float64(n))\n\tfmt.Println(avg)\n}\n```\n\n```php\n<?php\n\nfunction averageOfArray($arr) {\n\treturn array_sum($arr)/sizeof($arr);\n}\n\necho averageOfArray([1,2,3,4,5])\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-09T17:44:44Z"}