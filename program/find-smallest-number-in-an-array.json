{"slug":"find-smallest-number-in-an-array","title":"Find smallest number in an array","trackId":3942,"tags":["C","C++","Java","JavaScript","Kotlin","Ruby","TypeScript","Python","Scala","GO","PHP","Rust"],"contributors":["jfinley6","anandfresh","vedantpople4","harshraj8843","hi-Kartik2004","hugosmoreira","sureshsgith","mrajen27","castanedadev-edu","Marsh-sudo","thongncvn","Greeshma-frontier"],"contentHtml":"<h2>Write a program to find smallest number in an array</h2>\n<pre><code>Input  : [1, 2, 3, 4, 5]\nOutput : 1\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>    \n     \nint main()    \n{    \n    //Initialize array     \n    int arr[] = {1, 2, 3, 4, 5};      \n        \n    //Calculate length of array arr    \n    int length = sizeof(arr)/sizeof(arr[0]);    \n        \n    //Initialize min with first element of array.    \n    int min = arr[0];    \n        \n    //Loop through the array    \n    for (int i = 0; i &#x3C; length; i++) {     \n        //Compare elements of array with min    \n       if(arr[i] &#x3C; min)    \n           min = arr[i];    \n    }      \n    printf(\"Smallest element present in given array: %d\\n\", min);    \n    return 0;    \n}\n</code></pre>\n<pre><code>// Programme to find the smallest element in the array...\n#include &#x3C;bits/stdc++.h>\n#define ll long long // For typing ease.\nusing namespace std;\n\nint main(){\n    // Taking array limit input:\n    cout&#x3C;&#x3C;\"Enter the length of the array :\";\n    ll n;   cin>>n;\n    ll a[n];\n    for(int i=0;i&#x3C;n;i++){\n        cin>>a[i];\n    }\n\n    //Finding the smallest element present in the array :\n\n    ll min = INT_MAX;\n    for(int i=0;i&#x3C;n;i++){\n        if(a[i]&#x3C;min){\n            min=a[i];\n        }\n    }\n\n    //Returning the value :\n    cout&#x3C;&#x3C;\"The smallest element present in the array is : \"&#x3C;&#x3C;min&#x3C;&#x3C;endl;\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n</code></pre>\n<pre><code>import java.util.Scanner;\n\nclass FindSmallestNumberInAnArray {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(FindSmallestNumberInAnArray.findSmallestNumber(new double[] { 100, 50.25, 10, 76, 3 }));\n\t}\n\n\tprivate static double findSmallestNumber(double[] array) {\n\t\tdouble smallest = array[0];\n\n\t\tfor (int i = 0; i &#x3C; array.length; i++) {\n\t\t\tdouble currentItem = array[i];\n\n\t\t\tif (currentItem &#x3C; smallest) {\n\t\t\t\tsmallest = currentItem;\n\t\t\t}\n\t\t}\n\t\treturn smallest;\n\t}\n}\n</code></pre>\n<pre><code>function findSmallestNumberInAnArray(arr) {\n    let smallestNumber = arr[0];\n    for(let i = 0; i &#x3C; arr.length; i++) {\n        if (arr[i] &#x3C; smallestNumber) {\n            smallestNumber = arr[i];\n        }\n    }\n    console.log(smallestNumber);\n}\n\nfindSmallestNumberInAnArray([1, 2, 3, 4, 5]);\n</code></pre>\n<pre><code>import kotlin.Int;\nfun main() {\n    val nums = arrayOf(1, 8, 3, 4,2)\n    var firstSmallest:Int = Int.MAX_VALUE;\n    var secondSmallest:Int = Int.MAX_VALUE;\n    for(i in nums.indices) {\n        if(nums[i] &#x3C; firstSmallest) {\n            firstSmallest = nums[i];\n        };\n    };\n    for(i in nums.indices) {\n        if(nums[i] &#x3C; secondSmallest &#x26;&#x26; nums[i] > firstSmallest) {\n            secondSmallest = nums[i];\n        };\n    };\n    print(\"Second Smallest Number::\"+secondSmallest)\n}\n</code></pre>\n<pre><code>def findSmallestNumberInAnArray array\n    array.min\nend\n\nputs findSmallestNumberInAnArray [1,2,3,4,5]\n</code></pre>\n<pre><code>function FindSmallestNumberInAnArray(values: number[]) {\n    let smallest = values[0]; // If values has length = 0, undefined is good\n    for (let i = 1; i &#x3C; values.length; i++) {\n        if (smallest > values[i]) {\n            smallest = values[i];\n        }\n    }\n    return smallest;\n}\n\nFindSmallestNumberInAnArray([1, 4, -5, 2, 1])\n</code></pre>\n<pre><code># PYTHON program to find smallest number\nl = [int(l) for l in input(\"Create an array:\").split(\",\")]\nprint(\"Your list is\", l)\n# Assign first element as minimum\nmin1 = l[0]\nfor i in range(len(l)):\n    # check if other element is min than first element\n    if l[i] &#x3C; min1:\n        min1 = l[i]\nprint(\"Smallest number in the list is \", min1)\n\n# or use built-in python function: min(l)\n</code></pre>\n<pre><code>object Scala_Array {\n\n  def main(args: Array[String]): Unit = {\n    val arr = Array(1, 2, 3, 4, 5);\n    println(\"Original array :\")\n    for (x &#x3C;- arr) {\n      print(s\"${x}, \")\n    }\n    var first_element, arr_size = arr.length;\n      first_element = Int.MaxValue\n\n      for (i &#x3C;- 0 to arr_size - 1) {\n        if (arr(i) &#x3C; first_element) {\n          first_element = arr(i);\n        }\n\n      }\n        println(\n          s\"\\nThe smallest element is : ${first_element}\"\n        );\n  }\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar size, i int\n\tfmt.Scan(&#x26;size)\n\tarr := make([]int, size)\n\tfor i = 0; i &#x3C; size; i++ {\n\t\tfmt.Scan(&#x26;arr[i])\n\t}\n\tsmall := arr[0]\n\tfor i = 0; i &#x3C; size; i++ {\n\t\tif small > arr[i] {\n\t\t\tsmall = arr[i]\n\t\t}\n\t}\n\tfmt.Println(small)\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction smallestNumber($array) {\n  sort($array);\n  return $array[0];\n}\n\necho smallestNumber([1,2,3,4,5]);\n\n?>\n</code></pre>\n<pre><code>fn main() {\n    // Define the array of numbers\n    let numbers = [1, 2, 3, 4, 5];\n\n    // Initialize a variable to store the smallest number\n    let mut smallest = numbers[0];\n\n    // Iterate over the array and find the smallest number\n    for number in numbers.iter() {\n        if *number &#x3C; smallest {\n            smallest = *number;\n        }\n    }\n\n    // Print the smallest number\n    println!(\"The smallest number is {}\", smallest);\n}\n</code></pre>\n","markdown":"\n## Write a program to find smallest number in an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : 1\n```\n\n---\n\n<CodeBlock slug=\"find-smallest-number-in-an-array\" >\n\n```c\n#include <stdio.h>    \n     \nint main()    \n{    \n    //Initialize array     \n    int arr[] = {1, 2, 3, 4, 5};      \n        \n    //Calculate length of array arr    \n    int length = sizeof(arr)/sizeof(arr[0]);    \n        \n    //Initialize min with first element of array.    \n    int min = arr[0];    \n        \n    //Loop through the array    \n    for (int i = 0; i < length; i++) {     \n        //Compare elements of array with min    \n       if(arr[i] < min)    \n           min = arr[i];    \n    }      \n    printf(\"Smallest element present in given array: %d\\n\", min);    \n    return 0;    \n}\n```\n\n```cpp\n// Programme to find the smallest element in the array...\n#include <bits/stdc++.h>\n#define ll long long // For typing ease.\nusing namespace std;\n\nint main(){\n    // Taking array limit input:\n    cout<<\"Enter the length of the array :\";\n    ll n;   cin>>n;\n    ll a[n];\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n    }\n\n    //Finding the smallest element present in the array :\n\n    ll min = INT_MAX;\n    for(int i=0;i<n;i++){\n        if(a[i]<min){\n            min=a[i];\n        }\n    }\n\n    //Returning the value :\n    cout<<\"The smallest element present in the array is : \"<<min<<endl;\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n```\n\n```java\nimport java.util.Scanner;\n\nclass FindSmallestNumberInAnArray {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(FindSmallestNumberInAnArray.findSmallestNumber(new double[] { 100, 50.25, 10, 76, 3 }));\n\t}\n\n\tprivate static double findSmallestNumber(double[] array) {\n\t\tdouble smallest = array[0];\n\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tdouble currentItem = array[i];\n\n\t\t\tif (currentItem < smallest) {\n\t\t\t\tsmallest = currentItem;\n\t\t\t}\n\t\t}\n\t\treturn smallest;\n\t}\n}\n```\n\n```js\nfunction findSmallestNumberInAnArray(arr) {\n    let smallestNumber = arr[0];\n    for(let i = 0; i < arr.length; i++) {\n        if (arr[i] < smallestNumber) {\n            smallestNumber = arr[i];\n        }\n    }\n    console.log(smallestNumber);\n}\n\nfindSmallestNumberInAnArray([1, 2, 3, 4, 5]);\n```\n\n```kt\nimport kotlin.Int;\nfun main() {\n    val nums = arrayOf(1, 8, 3, 4,2)\n    var firstSmallest:Int = Int.MAX_VALUE;\n    var secondSmallest:Int = Int.MAX_VALUE;\n    for(i in nums.indices) {\n        if(nums[i] < firstSmallest) {\n            firstSmallest = nums[i];\n        };\n    };\n    for(i in nums.indices) {\n        if(nums[i] < secondSmallest && nums[i] > firstSmallest) {\n            secondSmallest = nums[i];\n        };\n    };\n    print(\"Second Smallest Number::\"+secondSmallest)\n}\n```\n\n```rb\ndef findSmallestNumberInAnArray array\n    array.min\nend\n\nputs findSmallestNumberInAnArray [1,2,3,4,5]\n```\n\n```ts\nfunction FindSmallestNumberInAnArray(values: number[]) {\n    let smallest = values[0]; // If values has length = 0, undefined is good\n    for (let i = 1; i < values.length; i++) {\n        if (smallest > values[i]) {\n            smallest = values[i];\n        }\n    }\n    return smallest;\n}\n\nFindSmallestNumberInAnArray([1, 4, -5, 2, 1])\n```\n\n```py\n# PYTHON program to find smallest number\nl = [int(l) for l in input(\"Create an array:\").split(\",\")]\nprint(\"Your list is\", l)\n# Assign first element as minimum\nmin1 = l[0]\nfor i in range(len(l)):\n    # check if other element is min than first element\n    if l[i] < min1:\n        min1 = l[i]\nprint(\"Smallest number in the list is \", min1)\n\n# or use built-in python function: min(l)\n```\n\n```scala\nobject Scala_Array {\n\n  def main(args: Array[String]): Unit = {\n    val arr = Array(1, 2, 3, 4, 5);\n    println(\"Original array :\")\n    for (x <- arr) {\n      print(s\"${x}, \")\n    }\n    var first_element, arr_size = arr.length;\n      first_element = Int.MaxValue\n\n      for (i <- 0 to arr_size - 1) {\n        if (arr(i) < first_element) {\n          first_element = arr(i);\n        }\n\n      }\n        println(\n          s\"\\nThe smallest element is : ${first_element}\"\n        );\n  }\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar size, i int\n\tfmt.Scan(&size)\n\tarr := make([]int, size)\n\tfor i = 0; i < size; i++ {\n\t\tfmt.Scan(&arr[i])\n\t}\n\tsmall := arr[0]\n\tfor i = 0; i < size; i++ {\n\t\tif small > arr[i] {\n\t\t\tsmall = arr[i]\n\t\t}\n\t}\n\tfmt.Println(small)\n}\n```\n\n```php\n<?php\n\nfunction smallestNumber($array) {\n  sort($array);\n  return $array[0];\n}\n\necho smallestNumber([1,2,3,4,5]);\n\n?>\n```\n\n```rs\nfn main() {\n    // Define the array of numbers\n    let numbers = [1, 2, 3, 4, 5];\n\n    // Initialize a variable to store the smallest number\n    let mut smallest = numbers[0];\n\n    // Iterate over the array and find the smallest number\n    for number in numbers.iter() {\n        if *number < smallest {\n            smallest = *number;\n        }\n    }\n\n    // Print the smallest number\n    println!(\"The smallest number is {}\", smallest);\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-28T04:53:47Z"}