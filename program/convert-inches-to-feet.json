{"slug":"convert-inches-to-feet","title":"Convert inches to feet","trackId":5617,"tags":["C","C++","C#","F#","Java","JavaScript","Kotlin","Ruby","Swift","TypeScript","Python","Scala","Dart","GO","Haskell","PHP","Perl","R","Rust"],"contributors":["Preetiraj3697","harshraj8843","ANUSHRAV01","anandfresh","patel-aum","hi-Kartik2004","rksp25","ob-codes","grraghav120","anafvana","Sttormx","hugosmoreira","gtierrezandres","Varun-Dhruv"],"contentHtml":"<h2>Write a program to convert inches to feet</h2>\n<p>1 foot = 12 inches</p>\n<pre><code>Input  : 60\nOutput : 5\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nint main()\n{\n  float num, result;\n  \n  printf(\"Please enter inches: \");\n  scanf(\"%f\", &#x26;num);\n\n  result = num / 12.0;\n\n  printf(\"%0.2f inches equals to %0.2f feet\", num, result);\n  \n  return 0;\n}\n</code></pre>\n<pre><code>#include&#x3C;bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int inches;\n    cin>>inches;\n    int foot=(int)inches/12;\n    cout&#x3C;&#x3C;foot&#x3C;&#x3C;'\\n';\n    return 0;\n}\n</code></pre>\n<pre><code>using System;\n\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Please enter inches:\");\n    double inches = Convert.ToDouble(Console.ReadLine());\n    double feet = inches / 12;\n    Console.WriteLine(inches+ \" inches is \"+feet + \" Feet\");\n  }\n}\n</code></pre>\n<pre><code>let inchesToFeet (inches: float) =\n    inches / 12.0\n\n// Example usage\nlet feet = inchesToFeet 60.0\nprintfn \"%f\" feet // Output: 5.0\n</code></pre>\n<pre><code>import java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t    System.out.print(\"Please enter the inch value: \");\n\t    Scanner sc=new Scanner(System.in);\n\t    int inches=sc.nextInt();\n\t    int feet = inches/12;\n\t   System.out.print(inches+\" inches is \"+feet+ \" feet\");\n\n\t}\n}\n</code></pre>\n<pre><code>function inchesToFeet(inch){\n  return Math.round(inch/12);\n}\n\nconsole.log(inchesToFeet(60));\n</code></pre>\n<pre><code>fun main() {\n    print(\"Enter inches : \")\n    println()\n    var input = readLine()\n\n    println(\"$input inches = \" + ConvertInchesToFeet(input!!.toDouble()) + \" feet\")\n\n}\n\nprivate fun ConvertInchesToFeet(inches: Double): Double {\n    var cm = inches / 12\n\n    return cm\n}\n</code></pre>\n<pre><code>print \"Please enter the inch value: \";\ninches = gets.chomp.to_f;  \n\nfeet = inches/12;\n\nprint \"The value in feet : #{feet.to_f.round(2)}\"\n</code></pre>\n<pre><code>func inchesToFeet(inches: Int) -> Int {\n    let feet = inches / 12\n    return feet\n}\n\nprint(\"Input: \", terminator: \"\")\nlet inches = Int(readLine()!)!\nlet feet = inchesToFeet(inches: inches)\nprint(\"Output: \\(feet)\")\n</code></pre>\n<pre><code>const ConvertInchesToFeet = (Inches: number): number => {\n    let result: number = parseFloat((Inches / 12).toFixed(2));\n    return result;\n}\nexport default ConvertInchesToFeet;\n</code></pre>\n<pre><code>print(round(float(input()) / 12, 2))\n</code></pre>\n<pre><code>import scala.io.StdIn._;\n\nobject inchesToFeet {\n  def main(args:Array[String]):Unit={\n    println(\"Enter the inch value : \");\n    var inches = readLine();\n    var feet = inches.toInt / 12;\n    println(inches+\" inches is \"+feet+\" feet\");\n  }\n}\n</code></pre>\n<pre><code>import 'dart:io';\n\nvoid main() {\n  print('Enter value in inches:');\n  String? input = stdin.readLineSync()!;\n  double result = (double.parse(input)) / 12;\n  print(result.toStringAsFixed(2));\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar inches float64\n\tvar feets float64\n\tfmt.Scanf(\"%f\", &#x26;inches)\n\tfeets = inches / 12\n\tfmt.Println(feets)\n}\n</code></pre>\n<pre><code>-- Inches to feet with integer result\ninchesToFeet:: Int -> Int\ninchesToFeet i = div i 12 \n\n-- Inches to feet with float result\ninchesToFeetFloat :: Int -> Float\ninchesToFeetFloat i = fromIntegral i / 12\n\nmain :: IO ()\nmain = do\n  -- Convert 12 inches to feet\n  let feet = inchesToFeet 12\n  -- Convert 12 inches to feet (float result)\n  let feetFloat = inchesToFeetFloat 12\n  -- Print the results\n  putStrLn $ \"12 inches is equivalent to \" ++ show feet ++ \" feet (integer result).\"\n  putStrLn $ \"12 inches is equivalent to \" ++ show feetFloat ++ \" feet (float result).\"\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction inchesToFeet($inch){\n  return round($inch/12, 2);\n}\n\necho(inchesToFeet(60));\n\n?>\n</code></pre>\n<pre><code>print \"Enter the inch value : \";\nmy $inch = &#x3C;STDIN> ;\n\nmy $res = inches2Feet($inch);\nprint \"Feet conversion for the given inch : $res feet\";\n\nsub inches2Feet\n{\n    my ($x) = @_;\n    my $res = $x / 12;\n    return $res ;   \n}\n</code></pre>\n<pre><code># function to convert inches to feet\ninches_to_feet &#x3C;- function(inches) {\n  feet &#x3C;- inches / 12\n  return(feet)\n}\n\nresult &#x3C;- inches_to_feet(24)\nprint(result)\n</code></pre>\n<pre><code>fn main() {\n    // Prompt the user for the number of inches\n    println!(\"Enter the number of inches: \");\n\n    // Read the user input and store it in a variable\n    let mut inches = String::new();\n    std::io::stdin().read_line(&#x26;mut inches)\n        .expect(\"Failed to read line\");\n\n    // Check if the input is empty\n    if inches.trim().is_empty() {\n        println!(\"Please enter a valid number\");\n        return;\n    }\n\n    // Convert the input to a number\n    let inches: u32 = inches.trim().parse()\n        .expect(\"Please enter a valid number\");\n\n    // Convert inches to feet\n    let feet = inches / 12;\n\n    // Print the result\n    println!(\"{} inches is equal to {} feet\", inches, feet);\n}\n</code></pre>\n","markdown":"\n## Write a program to convert inches to feet\n\n1 foot = 12 inches\n\n```txt\nInput  : 60\nOutput : 5\n```\n\n---\n\n<CodeBlock slug=\"convert-inches-to-feet\" >\n\n```c\n#include <stdio.h>\n\nint main()\n{\n  float num, result;\n  \n  printf(\"Please enter inches: \");\n  scanf(\"%f\", &num);\n\n  result = num / 12.0;\n\n  printf(\"%0.2f inches equals to %0.2f feet\", num, result);\n  \n  return 0;\n}\n```\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int inches;\n    cin>>inches;\n    int foot=(int)inches/12;\n    cout<<foot<<'\\n';\n    return 0;\n}\n```\n\n```cs\nusing System;\n\nclass MainClass {\n    public static void Main (string[] args) {\n    Console.WriteLine (\"Please enter inches:\");\n    double inches = Convert.ToDouble(Console.ReadLine());\n    double feet = inches / 12;\n    Console.WriteLine(inches+ \" inches is \"+feet + \" Feet\");\n  }\n}\n```\n\n```fs\nlet inchesToFeet (inches: float) =\n    inches / 12.0\n\n// Example usage\nlet feet = inchesToFeet 60.0\nprintfn \"%f\" feet // Output: 5.0\n```\n\n```java\nimport java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t    System.out.print(\"Please enter the inch value: \");\n\t    Scanner sc=new Scanner(System.in);\n\t    int inches=sc.nextInt();\n\t    int feet = inches/12;\n\t   System.out.print(inches+\" inches is \"+feet+ \" feet\");\n\n\t}\n}\n```\n\n```js\nfunction inchesToFeet(inch){\n  return Math.round(inch/12);\n}\n\nconsole.log(inchesToFeet(60));\n```\n\n```kt\nfun main() {\n    print(\"Enter inches : \")\n    println()\n    var input = readLine()\n\n    println(\"$input inches = \" + ConvertInchesToFeet(input!!.toDouble()) + \" feet\")\n\n}\n\nprivate fun ConvertInchesToFeet(inches: Double): Double {\n    var cm = inches / 12\n\n    return cm\n}\n```\n\n```rb\nprint \"Please enter the inch value: \";\ninches = gets.chomp.to_f;  \n\nfeet = inches/12;\n\nprint \"The value in feet : #{feet.to_f.round(2)}\"\n```\n\n```swift\nfunc inchesToFeet(inches: Int) -> Int {\n    let feet = inches / 12\n    return feet\n}\n\nprint(\"Input: \", terminator: \"\")\nlet inches = Int(readLine()!)!\nlet feet = inchesToFeet(inches: inches)\nprint(\"Output: \\(feet)\")\n```\n\n```ts\nconst ConvertInchesToFeet = (Inches: number): number => {\n    let result: number = parseFloat((Inches / 12).toFixed(2));\n    return result;\n}\nexport default ConvertInchesToFeet;\n```\n\n```py\nprint(round(float(input()) / 12, 2))\n```\n\n```scala\nimport scala.io.StdIn._;\n\nobject inchesToFeet {\n  def main(args:Array[String]):Unit={\n    println(\"Enter the inch value : \");\n    var inches = readLine();\n    var feet = inches.toInt / 12;\n    println(inches+\" inches is \"+feet+\" feet\");\n  }\n}\n```\n\n```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter value in inches:');\n  String? input = stdin.readLineSync()!;\n  double result = (double.parse(input)) / 12;\n  print(result.toStringAsFixed(2));\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar inches float64\n\tvar feets float64\n\tfmt.Scanf(\"%f\", &inches)\n\tfeets = inches / 12\n\tfmt.Println(feets)\n}\n```\n\n```hs\n-- Inches to feet with integer result\ninchesToFeet:: Int -> Int\ninchesToFeet i = div i 12 \n\n-- Inches to feet with float result\ninchesToFeetFloat :: Int -> Float\ninchesToFeetFloat i = fromIntegral i / 12\n\nmain :: IO ()\nmain = do\n  -- Convert 12 inches to feet\n  let feet = inchesToFeet 12\n  -- Convert 12 inches to feet (float result)\n  let feetFloat = inchesToFeetFloat 12\n  -- Print the results\n  putStrLn $ \"12 inches is equivalent to \" ++ show feet ++ \" feet (integer result).\"\n  putStrLn $ \"12 inches is equivalent to \" ++ show feetFloat ++ \" feet (float result).\"\n```\n\n```php\n<?php\n\nfunction inchesToFeet($inch){\n  return round($inch/12, 2);\n}\n\necho(inchesToFeet(60));\n\n?>\n```\n\n```pl\nprint \"Enter the inch value : \";\nmy $inch = <STDIN> ;\n\nmy $res = inches2Feet($inch);\nprint \"Feet conversion for the given inch : $res feet\";\n\nsub inches2Feet\n{\n    my ($x) = @_;\n    my $res = $x / 12;\n    return $res ;   \n}\n```\n\n```r\n# function to convert inches to feet\ninches_to_feet <- function(inches) {\n  feet <- inches / 12\n  return(feet)\n}\n\nresult <- inches_to_feet(24)\nprint(result)\n```\n\n```rs\nfn main() {\n    // Prompt the user for the number of inches\n    println!(\"Enter the number of inches: \");\n\n    // Read the user input and store it in a variable\n    let mut inches = String::new();\n    std::io::stdin().read_line(&mut inches)\n        .expect(\"Failed to read line\");\n\n    // Check if the input is empty\n    if inches.trim().is_empty() {\n        println!(\"Please enter a valid number\");\n        return;\n    }\n\n    // Convert the input to a number\n    let inches: u32 = inches.trim().parse()\n        .expect(\"Please enter a valid number\");\n\n    // Convert inches to feet\n    let feet = inches / 12;\n\n    // Print the result\n    println!(\"{} inches is equal to {} feet\", inches, feet);\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-06T05:44:28Z"}