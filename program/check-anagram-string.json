{"slug":"check-anagram-string","title":"Check Anagram Strings","trackId":6642,"tags":["Java","Python"],"contributors":["andrey100f","harshraj8843","deepakkhanna18"],"contentHtml":"<h2>Write a program to check Anagram strings</h2>\n<p>Two strings are said to be anagrams if they make a meaningful word by rearranging or shuffling the letters of the string. In other words, we can say that two strings are anagrams if they contain the same characters but in different order.</p>\n<pre><code>Input  : pan, nap\nOutput : Anagram Strings\n</code></pre>\n<hr>\n<pre><code>import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class CheckAnagramString {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        // Get the strings from the user\n        System.out.print(\"Enter the first word: \");\n        String word1 = scan.next();\n\n        System.out.print(\"Enter the second word: \");\n        String word2 = scan.next();\n\n        // Check if the strings are anagrams and print a message to user\n        if(isAnagram(word1, word2)) {\n            System.out.println(\"The words are anagrams.\");\n        }\n        else {\n            System.out.println(\"The words are not anagrams.\");\n        }\n\n        scan.close();\n    }\n\n    /**\n     * Checks if two strings are anagrams\n     * @param word1 String\n     * @param word2 String\n     * @return Boolean\n     */\n    public static boolean isAnagram(String word1, String word2) {\n        // Convert both strings to lowercase\n        word1 = word1.toLowerCase();\n        word2 = word2.toLowerCase();\n\n        // Remove all non-alphabetic characters\n        word1 = word1.replaceAll(\"[^a-z]\", \"\");\n        word2 = word2.replaceAll(\"[^a-z]\", \"\");\n\n        // If the strings have not the same length, there are not anagrams\n        if(word1.length() != word2.length()) {\n            return false;\n        }\n\n        // Sort both strings\n        char[] charArray1 = word1.toCharArray();\n        char[] charArray2 = word2.toCharArray();\n        Arrays.sort(charArray1);\n        Arrays.sort(charArray2);\n\n        // Compare the sorted strings. If there are equal, the strings are anagrams.\n        return Arrays.equals(charArray1, charArray2);\n    }\n}\n</code></pre>\n<pre><code># Function to check if string is anagram or not\ndef isanagram(str1,str2):\n    return sorted(str1)== sorted(str2):\n\n\nstring1 = input()\nstring2 = input()\nif isanagram(string1,string2) == True\n    print(\"Anagram Strings\")\nelse:\n    print(\"Not Anagram Strings\")\n</code></pre>\n","markdown":"\n## Write a program to check Anagram strings\n\nTwo strings are said to be anagrams if they make a meaningful word by rearranging or shuffling the letters of the string. In other words, we can say that two strings are anagrams if they contain the same characters but in different order.\n\n```txt\nInput  : pan, nap\nOutput : Anagram Strings\n```\n\n---\n\n<CodeBlock slug=\"check-anagram-string\" >\n\n```java\nimport java.util.Scanner;\nimport java.util.Arrays;\n\npublic class CheckAnagramString {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        // Get the strings from the user\n        System.out.print(\"Enter the first word: \");\n        String word1 = scan.next();\n\n        System.out.print(\"Enter the second word: \");\n        String word2 = scan.next();\n\n        // Check if the strings are anagrams and print a message to user\n        if(isAnagram(word1, word2)) {\n            System.out.println(\"The words are anagrams.\");\n        }\n        else {\n            System.out.println(\"The words are not anagrams.\");\n        }\n\n        scan.close();\n    }\n\n    /**\n     * Checks if two strings are anagrams\n     * @param word1 String\n     * @param word2 String\n     * @return Boolean\n     */\n    public static boolean isAnagram(String word1, String word2) {\n        // Convert both strings to lowercase\n        word1 = word1.toLowerCase();\n        word2 = word2.toLowerCase();\n\n        // Remove all non-alphabetic characters\n        word1 = word1.replaceAll(\"[^a-z]\", \"\");\n        word2 = word2.replaceAll(\"[^a-z]\", \"\");\n\n        // If the strings have not the same length, there are not anagrams\n        if(word1.length() != word2.length()) {\n            return false;\n        }\n\n        // Sort both strings\n        char[] charArray1 = word1.toCharArray();\n        char[] charArray2 = word2.toCharArray();\n        Arrays.sort(charArray1);\n        Arrays.sort(charArray2);\n\n        // Compare the sorted strings. If there are equal, the strings are anagrams.\n        return Arrays.equals(charArray1, charArray2);\n    }\n}\n```\n\n```py\n# Function to check if string is anagram or not\ndef isanagram(str1,str2):\n    return sorted(str1)== sorted(str2):\n\n\nstring1 = input()\nstring2 = input()\nif isanagram(string1,string2) == True\n    print(\"Anagram Strings\")\nelse:\n    print(\"Not Anagram Strings\")\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-09T21:02:50Z"}