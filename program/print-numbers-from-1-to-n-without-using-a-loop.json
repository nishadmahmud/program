{"slug":"print-numbers-from-1-to-n-without-using-a-loop","title":"Print numbers from 1 to n without using a loop","trackId":5076,"tags":["C","C++","C#","JavaScript","Kotlin","Ruby","TypeScript","Kotlin","Python","GO","PHP"],"contributors":["sancoLgates","harshraj8843","esivakumar18","anandfresh","AviadCohen24","SarthakSanjay","hi-Kartik2004","Medmly20208","jfinley6","loesking"],"contentHtml":"<h2>Write a program to print numbers from 1 to n without using a loop</h2>\n<pre><code>Input  : 5\nOutput : 1 2 3 4 5\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nvoid printNumbersFromOneToN(int n)\n{\n\n    if (n &#x3C;= 0)\n    {\n        return;\n    }\n\n    printNumbersFromOneToN(n - 1);\n\n    printf(\"%d \", n);\n}\n\nint main()\n{\n    int input;\n\n    printf(\"Enter an Integer: \\n\");\n    scanf(\"%d\", &#x26;input);\n\n    printNumbersFromOneToN(input);\n\n    return 0;\n}\n\n/*\n  Contributed by Medmly20208\n*/\n</code></pre>\n<pre><code>// CPP Program to print 1 to N\n// without loops and recursion\n#include &#x3C;iostream>\n#define ll long long\nusing namespace std;\n\nclass A {\npublic:\n    static ll a;\n    A() { cout &#x3C;&#x3C; a++ &#x3C;&#x3C;\" \"; }\n};\n \nll A::a = 1;\n \n// Driver Code\nint main()\n{\n    ll N;  cin>>N;\n    A obj[N];\n}\n\n/*\nContributed by : Kartikeya Saini\n*/\n</code></pre>\n<pre><code>using System;\nnamespace PrintNumbers{\n    class Program{\n        static void Main(string[] args){\n            int number = int.Parse(Console.ReadLine());\n            PrintByRecursion(number, 1);\n        } \n         private static void PrintByRecursion(int number, int currentNumber){\n            if(currentNumber == number)\n                Console.WriteLine($\"{currentNumber}\");\n            else{\n                Console.Write($\"{currentNumber} \");\n                PrintByRecursion(number, ++currentNumber);\n            }\n        }\n    }\n}\n</code></pre>\n<pre><code>function printNumbers(n) {\n    if (n === 0) {\n      return;\n    }\n    printNumbers(n - 1);\n    console.log(n);\n  }\n  \n  printNumbers(5);\n</code></pre>\n<pre><code>fun main() {\n  print(\"Enter number : \")\n  println()\n  var input = readLine()\n  printNumber(input!!.toInt(), input!!.toInt()-1)\n}\n\nfun printNumber(originalNum: Int, num: Int): Int {\n  println(originalNum-num)\n  if (num == 0) {\n   return originalNum\n  }\n  return printNumber(originalNum, num-1)\n}\n</code></pre>\n<pre><code>def printNumber(num)\n  if num > 0\n    printNumber(num - 1)\n    print(\"#{num} \") \n  end\nend\n\nputs printNumber(5)\n</code></pre>\n<pre><code>const print1ToN = (n: number): number => {\n n > 1 &#x26;&#x26; print1ToN(n - 1);\n console.log(n);\n}\n\nprint1ToN(5)\n</code></pre>\n<pre><code>fun main() {\n  print(\"Enter number : \")\n  println()\n  var input = readLine()\n  printNumber(input!!.toInt(), input!!.toInt()-1)\n}\n\nfun printNumber(originalNum: Int, num: Int): Int {\n  println(originalNum-num)\n  if (num == 0) {\n   return originalNum\n  }\n  return printNumber(originalNum, num-1)\n}\n</code></pre>\n<pre><code>def print_numbers(n: int) -> None:\n    if n &#x3C;= 0:\n        return\n\n    print_numbers(n - 1)\n\n    print(n)\n\n\nuser_input = int(input(\"Enter the value for n: \"))\nprint_numbers(user_input)\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc printNumbers(nums int) {\n\tif (nums &#x3C;= 0) {\n\t\treturn\n\t}\n\tprintNumbers(nums-1)\n\tfmt.Println(nums)\n}\n\nfunc main() {\n\tprintNumbers(5)\n}\n</code></pre>\n<pre><code>&#x3C;?php\nfunction print1ToN($n) {\n print implode(\"\\n\", range(1, $n)); \n}\n\nprint1ToN(5);\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to print numbers from 1 to n without using a loop\n\n```txt\nInput  : 5\nOutput : 1 2 3 4 5\n```\n\n---\n\n<CodeBlock slug=\"print-numbers-from-1-to-n-without-using-a-loop\" >\n\n```c\n#include <stdio.h>\n\nvoid printNumbersFromOneToN(int n)\n{\n\n    if (n <= 0)\n    {\n        return;\n    }\n\n    printNumbersFromOneToN(n - 1);\n\n    printf(\"%d \", n);\n}\n\nint main()\n{\n    int input;\n\n    printf(\"Enter an Integer: \\n\");\n    scanf(\"%d\", &input);\n\n    printNumbersFromOneToN(input);\n\n    return 0;\n}\n\n/*\n  Contributed by Medmly20208\n*/\n```\n\n```cpp\n// CPP Program to print 1 to N\n// without loops and recursion\n#include <iostream>\n#define ll long long\nusing namespace std;\n\nclass A {\npublic:\n    static ll a;\n    A() { cout << a++ <<\" \"; }\n};\n \nll A::a = 1;\n \n// Driver Code\nint main()\n{\n    ll N;  cin>>N;\n    A obj[N];\n}\n\n/*\nContributed by : Kartikeya Saini\n*/\n```\n\n```cs\nusing System;\nnamespace PrintNumbers{\n    class Program{\n        static void Main(string[] args){\n            int number = int.Parse(Console.ReadLine());\n            PrintByRecursion(number, 1);\n        } \n         private static void PrintByRecursion(int number, int currentNumber){\n            if(currentNumber == number)\n                Console.WriteLine($\"{currentNumber}\");\n            else{\n                Console.Write($\"{currentNumber} \");\n                PrintByRecursion(number, ++currentNumber);\n            }\n        }\n    }\n}\n```\n\n```js\nfunction printNumbers(n) {\n    if (n === 0) {\n      return;\n    }\n    printNumbers(n - 1);\n    console.log(n);\n  }\n  \n  printNumbers(5);\n```\n\n```kt\nfun main() {\n  print(\"Enter number : \")\n  println()\n  var input = readLine()\n  printNumber(input!!.toInt(), input!!.toInt()-1)\n}\n\nfun printNumber(originalNum: Int, num: Int): Int {\n  println(originalNum-num)\n  if (num == 0) {\n   return originalNum\n  }\n  return printNumber(originalNum, num-1)\n}\n```\n\n```rb\ndef printNumber(num)\n  if num > 0\n    printNumber(num - 1)\n    print(\"#{num} \") \n  end\nend\n\nputs printNumber(5)\n```\n\n```ts\nconst print1ToN = (n: number): number => {\n n > 1 && print1ToN(n - 1);\n console.log(n);\n}\n\nprint1ToN(5)\n```\n\n```kt\nfun main() {\n  print(\"Enter number : \")\n  println()\n  var input = readLine()\n  printNumber(input!!.toInt(), input!!.toInt()-1)\n}\n\nfun printNumber(originalNum: Int, num: Int): Int {\n  println(originalNum-num)\n  if (num == 0) {\n   return originalNum\n  }\n  return printNumber(originalNum, num-1)\n}\n```\n\n```py\ndef print_numbers(n: int) -> None:\n    if n <= 0:\n        return\n\n    print_numbers(n - 1)\n\n    print(n)\n\n\nuser_input = int(input(\"Enter the value for n: \"))\nprint_numbers(user_input)\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc printNumbers(nums int) {\n\tif (nums <= 0) {\n\t\treturn\n\t}\n\tprintNumbers(nums-1)\n\tfmt.Println(nums)\n}\n\nfunc main() {\n\tprintNumbers(5)\n}\n```\n\n```php\n<?php\nfunction print1ToN($n) {\n print implode(\"\\n\", range(1, $n)); \n}\n\nprint1ToN(5);\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-05T09:29:58Z"}