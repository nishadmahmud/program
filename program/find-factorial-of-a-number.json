{"slug":"find-factorial-of-a-number","title":"Find factorial of a number","trackId":3193,"tags":["C","C++","Java","Kotlin","Ruby","Swift","TypeScript","Python","Scala","Swift","Scala","GO","PHP"],"contributors":["harshraj8843","esivakumar18","lukaszmielczarekdev","hi-Kartik2004","jfinley6","anandfresh","rksp25","joao-vitor-souza","grraghav120","curious0207","devkansara"],"contentHtml":"<h2>Write a program to find factorial of a number</h2>\n<p>Factorial of N = N <em>(N-1)</em> (N-2) <em>...</em> 1</p>\n<pre><code>Input  : 5\nOutput : 120\n</code></pre>\n<hr>\n<pre><code>#include&#x3C;stdio.h>\n\nint main(){\n    int number;\n    scanf(\"%d\",&#x26;number);\n    int factorial=1;\n    for(int i=number;i>=1;i--){\n        factorial=factorial*i;\n    }\n    printf(\"Factorial of the given number is: %d\",factorial);\n    return 0;\n}\n</code></pre>\n<pre><code>// Programme to find the factorial of N\n\n#include &#x3C;bits/stdc++.h>\n#define ll long long // for typing ease.\nusing namespace std;\n\nint main(){\n    cout&#x3C;&#x3C;\"Enter the number N:\";\n    ll n;   cin>>n;\n    ll product=1;\n\n    // Calculating factorial.\n    for(int i=n;i>0;i--){\n        product = product * i;\n    }\n\n    // displaying output;\n    cout&#x3C;&#x3C;\"The factorial of \"&#x3C;&#x3C;n&#x3C;&#x3C;\" is \"&#x3C;&#x3C;product&#x3C;&#x3C;endl;\n\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n</code></pre>\n<pre><code>import java.util.*;\n\npublic class FindFactorialOfANumber {\n    public static int Factorial(int n) {\n        int fact = 1;\n        for (int i = 1; i &#x3C;= n; i++) {\n            fact *= i;\n        }\n        return fact;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        sc.close();\n        System.out.println(Factorial(n));\n    }\n}\n\n// Contributed by Raghav Garg (@grraghav120)\n</code></pre>\n<pre><code>import java.util.Scanner\n\nfun main() {\n    print(\"Enter String : \")\n    println()\n    var min = readLine()\n\n    println(\"Factorial of $min = \" + factorialOfNumber(min!!.toInt()))\n\n}\n\nprivate fun factorialOfNumber(num: Int): Long {\n    var factorial: Long = 1\n    for (i in 1..num) {\n        // factorial = factorial * i;\n        factorial *= i.toLong()\n    }\n\n    return factorial\n}\n</code></pre>\n<pre><code>puts \"Please enter a number: \"\ninput_number = gets.to_i\n\ndef findFactorialOfANumber number\n    factorial = 1\n\n    (2..number).each do |x|\n        factorial *= x\n    end\n\n    \"The factorial of #{number} is #{factorial}\"\nend\n\nputs findFactorialOfANumber input_number\n</code></pre>\n<pre><code>import Foundation\nimport Glibc\n\nprint(\"Enter number: \")\nvar number = Int(readLine()!)!\n\nprint(\"Factorial: \", factorial(fNumber: number))\n\nfunc factorial(fNumber: Int) -> Int{\n   var output = 1\n\n   if (fNumber > 1) {\n      for j in 1...fNumber{\n         output *= j\n      }\n   }\n   return output\n}\n</code></pre>\n<pre><code>const findFactorial = (n: number) => {\n  let result = 1;\n\n  if (n == 0 || n == 1) {\n    return result;\n  } else if (n > 1) {\n    for (var i = n; i >= 1; i--) {\n      result = result * i;\n    }\n    return result;\n  } else {\n    return \"please enter a positive number.\";\n  }\n};\n\nconsole.log(findFactorial(5));\n</code></pre>\n<pre><code>from math import factorial\n\nprint(factorial(int(input())))\n</code></pre>\n<pre><code>object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  var i = scala.io.StdIn.readInt();\n\n    var factorialN = 1;\n    while(i > 0) {  \n     factorialN = factorialN * i;\n     i = i - 1;\n    }\n    \n    println(factorialN);\n  }\n}\n</code></pre>\n<pre><code>import Foundation\nimport Glibc\n\nprint(\"Enter number: \")\nvar number = Int(readLine()!)!\n\nprint(\"Factorial: \", factorial(fNumber: number))\n\nfunc factorial(fNumber: Int) -> Int{\n   var output = 1\n\n   if (fNumber > 1) {\n      for j in 1...fNumber{\n         output *= j\n      }\n   }\n   return output\n}\n</code></pre>\n<pre><code>object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  var i = scala.io.StdIn.readInt();\n\n    var factorialN = 1;\n    while(i > 0) {  \n     factorialN = factorialN * i;\n     i = i - 1;\n    }\n    \n    println(factorialN);\n  }\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\n\tvar factorialnum, fact int\n\tfact = 1\n\n\tfmt.Print(\"Enter any Number to find its Factorial = \")\n\tfmt.Scanln(&#x26;factorialnum)\n\n\tfor i := 1; i &#x3C;= factorialnum; i++ {\n\t\tfact = fact * i\n\t}\n\tfmt.Println(factorialnum, \"Factorial is \", fact)\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction factorial($n) {  \n$factorial = 1;  \nfor ($x=$n; $x>=1; $x--)   \n{  \n  $factorial = $factorial * $x;  \n}  \nreturn \"Factorial of $n is $factorial\";  \n}\n\necho factorial(5);\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to find factorial of a number\n\nFactorial of N = N *(N-1)* (N-2) *...* 1\n\n```txt\nInput  : 5\nOutput : 120\n```\n\n---\n\n<CodeBlock slug=\"find-factorial-of-a-number\" >\n\n```c\n#include<stdio.h>\n\nint main(){\n    int number;\n    scanf(\"%d\",&number);\n    int factorial=1;\n    for(int i=number;i>=1;i--){\n        factorial=factorial*i;\n    }\n    printf(\"Factorial of the given number is: %d\",factorial);\n    return 0;\n}\n```\n\n```cpp\n// Programme to find the factorial of N\n\n#include <bits/stdc++.h>\n#define ll long long // for typing ease.\nusing namespace std;\n\nint main(){\n    cout<<\"Enter the number N:\";\n    ll n;   cin>>n;\n    ll product=1;\n\n    // Calculating factorial.\n    for(int i=n;i>0;i--){\n        product = product * i;\n    }\n\n    // displaying output;\n    cout<<\"The factorial of \"<<n<<\" is \"<<product<<endl;\n\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n```\n\n```java\nimport java.util.*;\n\npublic class FindFactorialOfANumber {\n    public static int Factorial(int n) {\n        int fact = 1;\n        for (int i = 1; i <= n; i++) {\n            fact *= i;\n        }\n        return fact;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        sc.close();\n        System.out.println(Factorial(n));\n    }\n}\n\n// Contributed by Raghav Garg (@grraghav120)\n```\n\n```kt\nimport java.util.Scanner\n\nfun main() {\n    print(\"Enter String : \")\n    println()\n    var min = readLine()\n\n    println(\"Factorial of $min = \" + factorialOfNumber(min!!.toInt()))\n\n}\n\nprivate fun factorialOfNumber(num: Int): Long {\n    var factorial: Long = 1\n    for (i in 1..num) {\n        // factorial = factorial * i;\n        factorial *= i.toLong()\n    }\n\n    return factorial\n}\n```\n\n```rb\nputs \"Please enter a number: \"\ninput_number = gets.to_i\n\ndef findFactorialOfANumber number\n    factorial = 1\n\n    (2..number).each do |x|\n        factorial *= x\n    end\n\n    \"The factorial of #{number} is #{factorial}\"\nend\n\nputs findFactorialOfANumber input_number\n```\n\n```swift\nimport Foundation\nimport Glibc\n\nprint(\"Enter number: \")\nvar number = Int(readLine()!)!\n\nprint(\"Factorial: \", factorial(fNumber: number))\n\nfunc factorial(fNumber: Int) -> Int{\n   var output = 1\n\n   if (fNumber > 1) {\n      for j in 1...fNumber{\n         output *= j\n      }\n   }\n   return output\n}\n```\n\n```ts\nconst findFactorial = (n: number) => {\n  let result = 1;\n\n  if (n == 0 || n == 1) {\n    return result;\n  } else if (n > 1) {\n    for (var i = n; i >= 1; i--) {\n      result = result * i;\n    }\n    return result;\n  } else {\n    return \"please enter a positive number.\";\n  }\n};\n\nconsole.log(findFactorial(5));\n```\n\n```py\nfrom math import factorial\n\nprint(factorial(int(input())))\n```\n\n```scala\nobject HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  var i = scala.io.StdIn.readInt();\n\n    var factorialN = 1;\n    while(i > 0) {  \n     factorialN = factorialN * i;\n     i = i - 1;\n    }\n    \n    println(factorialN);\n  }\n}\n```\n\n```swift\nimport Foundation\nimport Glibc\n\nprint(\"Enter number: \")\nvar number = Int(readLine()!)!\n\nprint(\"Factorial: \", factorial(fNumber: number))\n\nfunc factorial(fNumber: Int) -> Int{\n   var output = 1\n\n   if (fNumber > 1) {\n      for j in 1...fNumber{\n         output *= j\n      }\n   }\n   return output\n}\n```\n\n```scala\nobject HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  var i = scala.io.StdIn.readInt();\n\n    var factorialN = 1;\n    while(i > 0) {  \n     factorialN = factorialN * i;\n     i = i - 1;\n    }\n    \n    println(factorialN);\n  }\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n\tvar factorialnum, fact int\n\tfact = 1\n\n\tfmt.Print(\"Enter any Number to find its Factorial = \")\n\tfmt.Scanln(&factorialnum)\n\n\tfor i := 1; i <= factorialnum; i++ {\n\t\tfact = fact * i\n\t}\n\tfmt.Println(factorialnum, \"Factorial is \", fact)\n}\n```\n\n```php\n<?php\n\nfunction factorial($n) {  \n$factorial = 1;  \nfor ($x=$n; $x>=1; $x--)   \n{  \n  $factorial = $factorial * $x;  \n}  \nreturn \"Factorial of $n is $factorial\";  \n}\n\necho factorial(5);\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-06T05:50:11Z"}