{"slug":"reverse-an-array","title":"Reverse an array","trackId":4950,"tags":["C","C++","C#","Java","JavaScript","Ruby","TypeScript","Python","Scala","GO","PHP","Rust"],"contributors":["anandfresh","harshraj8843","Osher160","vedantpople4","hi-Kartik2004","hugosmoreira","Sdfeagt","dineshlalam15","loesking"],"contentHtml":"<h2>Write a program to reverse an array</h2>\n<pre><code>Input  : [1, 2, 3, 4, 5]\nOutput : [5, 4, 3, 2, 1]\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h> /* printf */\n#include &#x3C;stdlib.h> /* size_t */\n/*****************************************************************/\n/* function to reverse the arr, O(N) */\nvoid ReverseAnArray(int *arr, size_t size);\n\n/* function to print the array*/\n\nvoid PrintArr(int *arr,size_t size);\n/*****************************************************************/\nint main()\n{\n    int *arr = NULL;\n    size_t size = 0;\n    size_t i = 0;\n    int new_elem = 0;\n    printf(\"size of the arr:\");\n    scanf(\"%lu\",&#x26;size);\n    \n    printf(\"\\nplease enter elements:\");\n\n    arr = (int *) malloc(size * sizeof(int));\n\n    for(i = 0; i &#x3C; size;++i)\n    {\n        scanf(\"%d\",&#x26;new_elem);\n\n        arr[i] = new_elem;\n    }\n    \n    ReverseAnArray(arr,size);\n\n    PrintArr(arr,size);\n\n    free(arr);\n\n    return 0;\n}\n/*****************************************************************/\nvoid ReverseAnArray(int *arr, size_t size)\n{\n    size_t i = 0;\n    size_t rev = size - 1;\n    int tmp = 0;\n\n    for(i = 0; i&#x3C; (size/2); ++i, --rev)\n    {\n        tmp = arr[i];\n\n        arr[i] = arr[rev];\n        arr[rev] = tmp;    \n    }\n}\n/*****************************************************************/\nvoid PrintArr(int *arr,size_t size)\n{\n    size_t i = 0;\n\n    printf(\"\\n\");\n\n    for(i = 0; i &#x3C; size;++i)\n    {\n        printf(\"%d \",arr[i]);\n    }\n}\n</code></pre>\n<pre><code>#include &#x3C;bits/stdc++.h>\n#define ll long long // fot typing ease ll = long long\nusing namespace std;\n\nint main(){\n    // configuring the input\n    cout&#x3C;&#x3C;\"Enter the length of the array:\";\n    ll n;   cin>>n;\n    ll a[n];\n    ll ans[n]; // temp\n\n    //Taking array input\n    cout&#x3C;&#x3C;\"Enter the \"&#x3C;&#x3C;n&#x3C;&#x3C;\" numbers : \";\n    for(int i=0;i&#x3C;n;i++){\n        cin>>a[i];\n    }\n\n    //Reverse the array\n    for(int i=0;i&#x3C;n;i++){\n        ans[i] = a[n-1-i];\n    }\n\n    // Changing the reverse array to the inputted array.\n    for(int i=0;i&#x3C;n;i++){\n        a[i]=ans[i];\n    }\n\n    // Show the reversed array\n    cout&#x3C;&#x3C;\"The reversed array is :\"&#x3C;&#x3C;endl;\n    for(int i=0;i&#x3C;n;i++){\n        cout&#x3C;&#x3C;a[i]&#x3C;&#x3C;\" \";\n    }\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n</code></pre>\n<pre><code>using System;\n \npublic class Reverse\n{\n    public static void Main()\n    {\n        int[] array = { 1, 2, 3, 4, 5 };\n        Array.Reverse(array);\n \n        Console.WriteLine(String.Join(',', array));\n    }\n}\n</code></pre>\n<pre><code>import java.util.Arrays;\n\npublic class ReverseAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        System.out.println(Arrays.toString(reverseArray(arr)));\n    }\n    public static int [] reverseArray(int [] arr){\n        int [] reverseArray = new int[arr.length];\n        for(int i = 0; i &#x3C; arr.length; i++){\n            reverseArray[i] = arr[arr.length - 1 -i];\n        } return reverseArray;\n    }\n}\n</code></pre>\n<pre><code>const revArr = (arr) =>{\n    arr.reverse()\n    console.log(arr);\n}\n\nrevArr([1,2,3,4,5])\n</code></pre>\n<pre><code>a = [1, 2, 3, 4, 5]\nputs \"Reverse of the given array : #{a.reverse()}\\n\\n\"\n</code></pre>\n<pre><code>const reverseArray = (arr: number[]): number[] => {\n  return  arr.reverse();\n}\n\nconsole.log(reverseArray([1,2,3,4,5]));\n</code></pre>\n<pre><code>print(\n    list(\n        map(\n            lambda x: int(x.strip()),\n            input().replace(\"[\", \"\").replace(\"]\", \"\").split(\",\"),\n        )\n    )[::-1]\n)\n</code></pre>\n<pre><code>import scala.io.StdIn._;\n\nobject arrayReverse {\n    def main(args:Array[String]):Unit={\n        val mylist: List[Int] = List(1, 2, 3, 4, 5); \n        println(\"Array Reverse : \"+mylist.reverse);\n    }\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar arr = []int{5, 2, 3, 4, 5, 7, 8, 9}\n\tfor i := len(arr) - 1; i >= 0; i-- {\n\t\tfmt.Print(arr[i], \" \")\n\t}\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction reverseArray($array) {\n  return array_reverse($array);\n}\n\nprint_r(reverseArray([1,2,3,4,5]));\n\n?>\n</code></pre>\n<pre><code>fn main() {\n    // Declare the array to be reversed\n    let mut arr = [1, 2, 3, 4, 5];\n\n    // Reverse the array in place\n    arr.reverse();\n\n    // Print the reversed array\n    println!(\"{:?}\", arr);\n}\n</code></pre>\n","markdown":"\n## Write a program to reverse an array\n\n```txt\nInput  : [1, 2, 3, 4, 5]\nOutput : [5, 4, 3, 2, 1]\n```\n\n---\n\n<CodeBlock slug=\"reverse-an-array\" >\n\n```c\n#include <stdio.h> /* printf */\n#include <stdlib.h> /* size_t */\n/*****************************************************************/\n/* function to reverse the arr, O(N) */\nvoid ReverseAnArray(int *arr, size_t size);\n\n/* function to print the array*/\n\nvoid PrintArr(int *arr,size_t size);\n/*****************************************************************/\nint main()\n{\n    int *arr = NULL;\n    size_t size = 0;\n    size_t i = 0;\n    int new_elem = 0;\n    printf(\"size of the arr:\");\n    scanf(\"%lu\",&size);\n    \n    printf(\"\\nplease enter elements:\");\n\n    arr = (int *) malloc(size * sizeof(int));\n\n    for(i = 0; i < size;++i)\n    {\n        scanf(\"%d\",&new_elem);\n\n        arr[i] = new_elem;\n    }\n    \n    ReverseAnArray(arr,size);\n\n    PrintArr(arr,size);\n\n    free(arr);\n\n    return 0;\n}\n/*****************************************************************/\nvoid ReverseAnArray(int *arr, size_t size)\n{\n    size_t i = 0;\n    size_t rev = size - 1;\n    int tmp = 0;\n\n    for(i = 0; i< (size/2); ++i, --rev)\n    {\n        tmp = arr[i];\n\n        arr[i] = arr[rev];\n        arr[rev] = tmp;    \n    }\n}\n/*****************************************************************/\nvoid PrintArr(int *arr,size_t size)\n{\n    size_t i = 0;\n\n    printf(\"\\n\");\n\n    for(i = 0; i < size;++i)\n    {\n        printf(\"%d \",arr[i]);\n    }\n}\n```\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long // fot typing ease ll = long long\nusing namespace std;\n\nint main(){\n    // configuring the input\n    cout<<\"Enter the length of the array:\";\n    ll n;   cin>>n;\n    ll a[n];\n    ll ans[n]; // temp\n\n    //Taking array input\n    cout<<\"Enter the \"<<n<<\" numbers : \";\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n    }\n\n    //Reverse the array\n    for(int i=0;i<n;i++){\n        ans[i] = a[n-1-i];\n    }\n\n    // Changing the reverse array to the inputted array.\n    for(int i=0;i<n;i++){\n        a[i]=ans[i];\n    }\n\n    // Show the reversed array\n    cout<<\"The reversed array is :\"<<endl;\n    for(int i=0;i<n;i++){\n        cout<<a[i]<<\" \";\n    }\n    return 0;\n}\n\n/*\nAuthor : Kartikeya Saini\n*/\n```\n\n```cs\nusing System;\n \npublic class Reverse\n{\n    public static void Main()\n    {\n        int[] array = { 1, 2, 3, 4, 5 };\n        Array.Reverse(array);\n \n        Console.WriteLine(String.Join(',', array));\n    }\n}\n```\n\n```java\nimport java.util.Arrays;\n\npublic class ReverseAnArray {\n    public static void main(String[] args) {\n        int [] arr = {1,2,3,4,5};\n        System.out.println(Arrays.toString(reverseArray(arr)));\n    }\n    public static int [] reverseArray(int [] arr){\n        int [] reverseArray = new int[arr.length];\n        for(int i = 0; i < arr.length; i++){\n            reverseArray[i] = arr[arr.length - 1 -i];\n        } return reverseArray;\n    }\n}\n```\n\n```js\nconst revArr = (arr) =>{\n    arr.reverse()\n    console.log(arr);\n}\n\nrevArr([1,2,3,4,5])\n```\n\n```rb\na = [1, 2, 3, 4, 5]\nputs \"Reverse of the given array : #{a.reverse()}\\n\\n\"\n```\n\n```ts\nconst reverseArray = (arr: number[]): number[] => {\n  return  arr.reverse();\n}\n\nconsole.log(reverseArray([1,2,3,4,5]));\n```\n\n```py\nprint(\n    list(\n        map(\n            lambda x: int(x.strip()),\n            input().replace(\"[\", \"\").replace(\"]\", \"\").split(\",\"),\n        )\n    )[::-1]\n)\n```\n\n```scala\nimport scala.io.StdIn._;\n\nobject arrayReverse {\n    def main(args:Array[String]):Unit={\n        val mylist: List[Int] = List(1, 2, 3, 4, 5); \n        println(\"Array Reverse : \"+mylist.reverse);\n    }\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar arr = []int{5, 2, 3, 4, 5, 7, 8, 9}\n\tfor i := len(arr) - 1; i >= 0; i-- {\n\t\tfmt.Print(arr[i], \" \")\n\t}\n}\n```\n\n```php\n<?php\n\nfunction reverseArray($array) {\n  return array_reverse($array);\n}\n\nprint_r(reverseArray([1,2,3,4,5]));\n\n?>\n```\n\n```rs\nfn main() {\n    // Declare the array to be reversed\n    let mut arr = [1, 2, 3, 4, 5];\n\n    // Reverse the array in place\n    arr.reverse();\n\n    // Print the reversed array\n    println!(\"{:?}\", arr);\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-18T16:42:50Z"}