{"slug":"convert-string-to-sentencecase","title":"Convert string to sentencecase","trackId":5055,"tags":["C","C++","Java","JavaScript","Kotlin","TypeScript","Python","PHP"],"contributors":["harshraj8843","Sri01729","Osher160","anandfresh","rksp25","Pinklemonade33"],"contentHtml":"<h2>Write a program to convert string to sentencecase</h2>\n<p>Sentencecase is a style of writing in which the first letter of the first word is capitalized.</p>\n<pre><code>Input  : \"hello world\"\nOutput : \"Hello world\"\n</code></pre>\n<hr>\n<pre><code>#define _POSIX_C_SOURCE 200809L\n\n#include &#x3C;stdio.h>    /* printf, getline */\n#include &#x3C;stdlib.h>  /* free       */\n#include &#x3C;string.h> /* strlen */\n\nconst char *ConvertStringToSentenceCase(char *);\n\nint main()\n{\n    size_t size = 100;\n    char *str = NULL;\n\n    /* user need to free the ptr given, will be malloced in case it's points to NULL */\n    getline(&#x26;str,&#x26;size,stdin);\n\n    printf(\"%s \\n\",ConvertStringToSentenceCase(str));\n\n    free(str);\n\n    return 0;\n}\n\nconst char *ConvertStringToSentenceCase(char *str)\n{\n    char IsNewSentence[3] = {'.','?','!'};\n    int is_new_sentence = 1;\n\n    size_t i = 0;\n    size_t j = 0;\n\n    for(i = 0; i &#x3C; strlen(str); ++i)\n    {\n        if((str[i] >= 'a') &#x26;&#x26; (str[i] &#x3C;= 'z') &#x26;&#x26; (is_new_sentence))\n        {\n            str[i] -= 32;\n            is_new_sentence = 0;\n        }\n\n        else if((str[i] >= 'A') &#x26;&#x26; (str[i] &#x3C;= 'Z') &#x26;&#x26; (!is_new_sentence))\n        {\n            str[i] += 32;\n        }\n\n        else if((str[i] >= 'A') &#x26;&#x26; (str[i] &#x3C;= 'Z') &#x26;&#x26; (is_new_sentence))\n        {\n            is_new_sentence = 1;\n        }\n\n        else\n        {\n            for(j = 0; j &#x3C; 3; ++j)\n            {\n                if(IsNewSentence[j] == str[i])\n                {\n                    is_new_sentence = 1;\n                }\n            }\n        }\n    }\n\n    return str;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\n\nstd::string&#x26; ConvertStringToSentencecase(std::string&#x26; str);\n\nint main()\n{\n    std::string str;\n    std::getline(std::cin,str);\n\n    std::cout &#x3C;&#x3C; ConvertStringToSentencecase(str) &#x3C;&#x3C; '\\n';\n\n    return 0;\n}\n\nstd::string&#x26; ConvertStringToSentencecase(std::string&#x26; str)\n{\n    char IsNewSentence[3] = {'.','?','!'};\n    bool is_new_sentence = true;\n\n\n    for(size_t i = 0; i &#x3C; str.size(); ++i)\n    {\n        // checks if str[i] is the beginning of new sentence &#x26;&#x26; not UpperCase.\n\n        if((str[i] >= 'a') &#x26;&#x26; (str[i] &#x3C;= 'z') &#x26;&#x26; (is_new_sentence))\n        {\n            str[i] -= 32;\n            is_new_sentence = false;\n        }\n\n        // checks if str[i] is not the beginning of new sentence &#x26;&#x26; UpperCase.\n\n        else if((str[i] >= 'A') &#x26;&#x26; (str[i] &#x3C;= 'Z') &#x26;&#x26; (!is_new_sentence))\n        {\n            str[i] += 32;\n        }\n\n        // checks if str[i] is the beginning of new sentence &#x26;&#x26; UpperCase.\n        //if so, need to update the is_new_sentence for the next iteration.\n\n        else if((str[i] >= 'A') &#x26;&#x26; (str[i] &#x3C;= 'Z') &#x26;&#x26; (is_new_sentence))\n        {\n            is_new_sentence = false;\n        }\n\n        //checks if str[i] is a char before new sentence/end of the string.\n\n        else\n        {\n            for(size_t j = 0; j &#x3C; 3; ++j)\n            {\n                if(IsNewSentence[j] == str[i])\n                {\n                    is_new_sentence = true;\n                }\n            }\n        }\n    }\n\n    return str;\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\n\npublic class ConvertStringToSentencecase {\n    \n    public static void main(String[] args) {\n\n        Scanner scnr = new Scanner(System.in); \n        System.out.println(\"Enter the String\"); \n        String inputString = scnr.nextLine();\n\n        String s1 = inputString.substring(0, 1).toUpperCase();  \n        String s2 = inputString.substring(1);    \n        String sentence = inputString.substring(0, 1).toUpperCase() + inputString.substring(1); \n        System.out.println(sentence);\n    }\n}\n</code></pre>\n<pre><code>function sentenceCase(str) {\n    return  str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst result = sentenceCase('hello world');\nconsole.log(result);\n</code></pre>\n<pre><code>import java.util.Scanner\n\nfun main() {\n    print(\"Enter String : \")\n    println()\n    var min = readLine()\n\n    println(\"Sentence Case: \" + ConvertStringToSentencecase(min!!.split(\" \")))\n\n}\n\nprivate fun ConvertStringToSentencecase(args: List&#x3C;String>): String {\n    val buffer = StringBuffer()\n    for((index,case) in args.withIndex()){\n        if(index == 0) {\n            buffer.append(case.get(0).uppercase()).append(case.subSequence(1,case.length))\n        } else {\n            buffer.append(\" \").append(case)\n        }\n    }\n\n    return buffer.toString()\n}\n</code></pre>\n<pre><code>const sentenceCase = (str: string): string => {\n    return  str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconsole.log(sentenceCase('hello world'));\n</code></pre>\n<pre><code># Returns a string with the first letter capitalized in a sentence\r\n# The first letter of the string is capitalized if nothing but spaces or the listed punctuation is found\r\n# Every first letter after the listed punctuation is also capitalized\r\n\r\n\r\ndef sentence_case(string: str):\r\n    new_string = str()  # return value\r\n    cap = bool()  # letter capitalized if true\r\n    punc = [\"!\", \"?\", \".\"]  # listed punctuation\r\n    for index, x in enumerate(string):\r\n        if index == 0:\r\n            if x.islower():\r\n                new_string += x.upper()\r\n            elif x in punc or x == \" \":\r\n                new_string += x\r\n                cap = True\r\n            else:\r\n                new_string += x\r\n        else:\r\n            if x in punc:\r\n                new_string += x\r\n                cap = True\r\n            else:\r\n                if cap and x.islower():\r\n                    new_string += x.upper()\r\n                    cap = False\r\n                else:\r\n                    new_string += x\r\n\r\n    return new_string\r\n\r\n\r\nprint(sentence_case(input()))\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction sentenceCase($str) {\n    return ucfirst($str);\n}\n\necho sentenceCase('hello world');\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to convert string to sentencecase\n\nSentencecase is a style of writing in which the first letter of the first word is capitalized.\n\n```txt\nInput  : \"hello world\"\nOutput : \"Hello world\"\n```\n\n---\n\n<CodeBlock slug=\"convert-string-to-sentencecase\" >\n\n```c\n#define _POSIX_C_SOURCE 200809L\n\n#include <stdio.h>    /* printf, getline */\n#include <stdlib.h>  /* free       */\n#include <string.h> /* strlen */\n\nconst char *ConvertStringToSentenceCase(char *);\n\nint main()\n{\n    size_t size = 100;\n    char *str = NULL;\n\n    /* user need to free the ptr given, will be malloced in case it's points to NULL */\n    getline(&str,&size,stdin);\n\n    printf(\"%s \\n\",ConvertStringToSentenceCase(str));\n\n    free(str);\n\n    return 0;\n}\n\nconst char *ConvertStringToSentenceCase(char *str)\n{\n    char IsNewSentence[3] = {'.','?','!'};\n    int is_new_sentence = 1;\n\n    size_t i = 0;\n    size_t j = 0;\n\n    for(i = 0; i < strlen(str); ++i)\n    {\n        if((str[i] >= 'a') && (str[i] <= 'z') && (is_new_sentence))\n        {\n            str[i] -= 32;\n            is_new_sentence = 0;\n        }\n\n        else if((str[i] >= 'A') && (str[i] <= 'Z') && (!is_new_sentence))\n        {\n            str[i] += 32;\n        }\n\n        else if((str[i] >= 'A') && (str[i] <= 'Z') && (is_new_sentence))\n        {\n            is_new_sentence = 1;\n        }\n\n        else\n        {\n            for(j = 0; j < 3; ++j)\n            {\n                if(IsNewSentence[j] == str[i])\n                {\n                    is_new_sentence = 1;\n                }\n            }\n        }\n    }\n\n    return str;\n}\n```\n\n```cpp\n#include <iostream>\n\nstd::string& ConvertStringToSentencecase(std::string& str);\n\nint main()\n{\n    std::string str;\n    std::getline(std::cin,str);\n\n    std::cout << ConvertStringToSentencecase(str) << '\\n';\n\n    return 0;\n}\n\nstd::string& ConvertStringToSentencecase(std::string& str)\n{\n    char IsNewSentence[3] = {'.','?','!'};\n    bool is_new_sentence = true;\n\n\n    for(size_t i = 0; i < str.size(); ++i)\n    {\n        // checks if str[i] is the beginning of new sentence && not UpperCase.\n\n        if((str[i] >= 'a') && (str[i] <= 'z') && (is_new_sentence))\n        {\n            str[i] -= 32;\n            is_new_sentence = false;\n        }\n\n        // checks if str[i] is not the beginning of new sentence && UpperCase.\n\n        else if((str[i] >= 'A') && (str[i] <= 'Z') && (!is_new_sentence))\n        {\n            str[i] += 32;\n        }\n\n        // checks if str[i] is the beginning of new sentence && UpperCase.\n        //if so, need to update the is_new_sentence for the next iteration.\n\n        else if((str[i] >= 'A') && (str[i] <= 'Z') && (is_new_sentence))\n        {\n            is_new_sentence = false;\n        }\n\n        //checks if str[i] is a char before new sentence/end of the string.\n\n        else\n        {\n            for(size_t j = 0; j < 3; ++j)\n            {\n                if(IsNewSentence[j] == str[i])\n                {\n                    is_new_sentence = true;\n                }\n            }\n        }\n    }\n\n    return str;\n}\n```\n\n```java\nimport java.util.Scanner;\n\n\npublic class ConvertStringToSentencecase {\n    \n    public static void main(String[] args) {\n\n        Scanner scnr = new Scanner(System.in); \n        System.out.println(\"Enter the String\"); \n        String inputString = scnr.nextLine();\n\n        String s1 = inputString.substring(0, 1).toUpperCase();  \n        String s2 = inputString.substring(1);    \n        String sentence = inputString.substring(0, 1).toUpperCase() + inputString.substring(1); \n        System.out.println(sentence);\n    }\n}\n```\n\n```js\nfunction sentenceCase(str) {\n    return  str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst result = sentenceCase('hello world');\nconsole.log(result);\n```\n\n```kt\nimport java.util.Scanner\n\nfun main() {\n    print(\"Enter String : \")\n    println()\n    var min = readLine()\n\n    println(\"Sentence Case: \" + ConvertStringToSentencecase(min!!.split(\" \")))\n\n}\n\nprivate fun ConvertStringToSentencecase(args: List<String>): String {\n    val buffer = StringBuffer()\n    for((index,case) in args.withIndex()){\n        if(index == 0) {\n            buffer.append(case.get(0).uppercase()).append(case.subSequence(1,case.length))\n        } else {\n            buffer.append(\" \").append(case)\n        }\n    }\n\n    return buffer.toString()\n}\n```\n\n```ts\nconst sentenceCase = (str: string): string => {\n    return  str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconsole.log(sentenceCase('hello world'));\n```\n\n```py\n# Returns a string with the first letter capitalized in a sentence\r\n# The first letter of the string is capitalized if nothing but spaces or the listed punctuation is found\r\n# Every first letter after the listed punctuation is also capitalized\r\n\r\n\r\ndef sentence_case(string: str):\r\n    new_string = str()  # return value\r\n    cap = bool()  # letter capitalized if true\r\n    punc = [\"!\", \"?\", \".\"]  # listed punctuation\r\n    for index, x in enumerate(string):\r\n        if index == 0:\r\n            if x.islower():\r\n                new_string += x.upper()\r\n            elif x in punc or x == \" \":\r\n                new_string += x\r\n                cap = True\r\n            else:\r\n                new_string += x\r\n        else:\r\n            if x in punc:\r\n                new_string += x\r\n                cap = True\r\n            else:\r\n                if cap and x.islower():\r\n                    new_string += x.upper()\r\n                    cap = False\r\n                else:\r\n                    new_string += x\r\n\r\n    return new_string\r\n\r\n\r\nprint(sentence_case(input()))\n```\n\n```php\n<?php\n\nfunction sentenceCase($str) {\n    return ucfirst($str);\n}\n\necho sentenceCase('hello world');\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-23T07:25:43Z"}