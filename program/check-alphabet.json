{"slug":"check-alphabet","title":"Check Alphabet","trackId":1512,"tags":["C","C++","C#","Java","JavaScript","Kotlin","TypeScript","Python","GO","PHP"],"contributors":["sancoLgates","harshraj8843","rksp25","joao-vitor-souza","ronaldvimal","jyotik09","Ipankaj07","grraghav120","rahmat-dev","PraaneshSelvaraj"],"contentHtml":"<h2>Write a program to check alphabet</h2>\n<p>Check that the given character is an alphabet or not (a-z, A-Z).</p>\n<pre><code>Input  : a\nOutput : Alphabet\n</code></pre>\n<hr>\n<pre><code>//CheckAlphabet.c\n\n#include &#x3C;stdio.h>\n\nint main()\n{\n    char ch;\n    scanf(\"%c\",&#x26;ch);\n    if((ch>='A' &#x26;&#x26; ch&#x3C;='Z') || (ch>='a' &#x26;&#x26; ch&#x3C;='z')) printf(\"Alphabet\\n\");\n    else printf(\"Not Alphabet\\n\");\n    return 0;\n}\n</code></pre>\n<pre><code>//Contributed by Raghav Garg\n//CheckAlphabet.cpp\n#include &#x3C;iostream>\n\nusing namespace std;\n\nint main()\n{\n    char ch;\n    cin>>ch;\n    if((ch>='A' &#x26;&#x26; ch&#x3C;='Z') || (ch>='a' &#x26;&#x26; ch&#x3C;='z')) cout&#x3C;&#x3C;\"Alphabet\"&#x3C;&#x3C;'\\n';\n    else cout&#x3C;&#x3C;\"Not Alphabet\"&#x3C;&#x3C;'\\n';\n}\n</code></pre>\n<pre><code>using System;\r\n  \r\nclass CheckAlphabet {\r\n  \r\n    static public void Main()\r\n    {\r\n        Console.WriteLine(\"Input a character: \");\r\n        char ch = (char)Console.Read();\r\n        \r\n        if (Char.IsLetter(ch)) {\r\n             Console.WriteLine(ch + \" is an alphabet\");\r\n        } else {\r\n             Console.WriteLine(ch + \" is not an alphabet\");\r\n        }\r\n     \r\n    }\r\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\nclass CheckAlphabet {\n    public static void main(String[] args) {\n\n        Scanner input = new Scanner(System.in);\n        System.out.print(\"Input a character: \");\n\n        char ch = input.next().charAt(0);\n\n        if ((ch >= 'a' &#x26;&#x26; ch &#x3C;= 'z') || (ch >= 'A' &#x26;&#x26; ch &#x3C;= 'Z')) {\n            System.out.println(ch + \" is an alphabet\");\n        } else {\n            System.out.println(ch + \" is not an alphabet\");\n        }\n    }\n}\n</code></pre>\n<pre><code>function isCharacterALetter(char) {\n    return (/[a-zA-Z]/).test(char) ? 'Alphabet' : 'Not Alphabet';\n}\n\nconsole.log(isCharacterALetter('a'));\nconsole.log(isCharacterALetter('Z'));\nconsole.log(isCharacterALetter('!'));\n</code></pre>\n<pre><code>fun main() {\n    print(\"Input : \")\n    println()\n    var input = readLine()\n\n    println(\"Is $input is an alphabet : \" + CheckAlphabet(input!!))\n\n}\n\nprivate fun CheckAlphabet(inputStr: String): Boolean {\n    val c = inputStr.first()\n    if (c in 'a'..'z' || c in 'A'..'Z')\n        return true\n    else\n        return false\n}\n</code></pre>\n<pre><code>function isCharacterALetter(char: string): string {\n    return (/[a-zA-Z]/).test(char) ? 'Alphabet' : 'Not Alphabet';\n}\n\nconsole.log(isCharacterALetter('a'));\nconsole.log(isCharacterALetter('Z'));\nconsole.log(isCharacterALetter('!'));\n</code></pre>\n<pre><code>alphabet = input(\"\")\n# checking using isalpha() function.\nif alphabet.isalpha():\n    print(\"Alphabet\")\nelse:\n    print(\"Not an Alphabet\")\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nvar isAlphabet = regexp.MustCompile(`^[a-zA-Z]`).MatchString\n\nfunc main() {\n\tvar str string\n\tfmt.Print(\"Input a character: \")\n\tfmt.Scan(&#x26;str)\n\t\n\tif (isAlphabet(str)) {\n\t\tfmt.Println(\"Alphabet\")\n\t} else {\n\t\tfmt.Println(\"Non Alphabet\")\n\t}\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction check_alphabet($text)\n{\n\treturn ctype_alpha($text);\n}\n\necho check_alphabet('a') ? 'Alphabet' : 'Non Alphabet';\n</code></pre>\n","markdown":"\n## Write a program to check alphabet\n\nCheck that the given character is an alphabet or not (a-z, A-Z).\n\n```txt\nInput  : a\nOutput : Alphabet\n```\n\n---\n\n<CodeBlock slug=\"check-alphabet\" >\n\n```c\n//CheckAlphabet.c\n\n#include <stdio.h>\n\nint main()\n{\n    char ch;\n    scanf(\"%c\",&ch);\n    if((ch>='A' && ch<='Z') || (ch>='a' && ch<='z')) printf(\"Alphabet\\n\");\n    else printf(\"Not Alphabet\\n\");\n    return 0;\n}\n```\n\n```cpp\n//Contributed by Raghav Garg\n//CheckAlphabet.cpp\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    char ch;\n    cin>>ch;\n    if((ch>='A' && ch<='Z') || (ch>='a' && ch<='z')) cout<<\"Alphabet\"<<'\\n';\n    else cout<<\"Not Alphabet\"<<'\\n';\n}\n```\n\n```cs\nusing System;\r\n  \r\nclass CheckAlphabet {\r\n  \r\n    static public void Main()\r\n    {\r\n        Console.WriteLine(\"Input a character: \");\r\n        char ch = (char)Console.Read();\r\n        \r\n        if (Char.IsLetter(ch)) {\r\n             Console.WriteLine(ch + \" is an alphabet\");\r\n        } else {\r\n             Console.WriteLine(ch + \" is not an alphabet\");\r\n        }\r\n     \r\n    }\r\n}\n```\n\n```java\nimport java.util.Scanner;\n\nclass CheckAlphabet {\n    public static void main(String[] args) {\n\n        Scanner input = new Scanner(System.in);\n        System.out.print(\"Input a character: \");\n\n        char ch = input.next().charAt(0);\n\n        if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\n            System.out.println(ch + \" is an alphabet\");\n        } else {\n            System.out.println(ch + \" is not an alphabet\");\n        }\n    }\n}\n```\n\n```js\nfunction isCharacterALetter(char) {\n    return (/[a-zA-Z]/).test(char) ? 'Alphabet' : 'Not Alphabet';\n}\n\nconsole.log(isCharacterALetter('a'));\nconsole.log(isCharacterALetter('Z'));\nconsole.log(isCharacterALetter('!'));\n```\n\n```kt\nfun main() {\n    print(\"Input : \")\n    println()\n    var input = readLine()\n\n    println(\"Is $input is an alphabet : \" + CheckAlphabet(input!!))\n\n}\n\nprivate fun CheckAlphabet(inputStr: String): Boolean {\n    val c = inputStr.first()\n    if (c in 'a'..'z' || c in 'A'..'Z')\n        return true\n    else\n        return false\n}\n```\n\n```ts\nfunction isCharacterALetter(char: string): string {\n    return (/[a-zA-Z]/).test(char) ? 'Alphabet' : 'Not Alphabet';\n}\n\nconsole.log(isCharacterALetter('a'));\nconsole.log(isCharacterALetter('Z'));\nconsole.log(isCharacterALetter('!'));\n```\n\n```py\nalphabet = input(\"\")\n# checking using isalpha() function.\nif alphabet.isalpha():\n    print(\"Alphabet\")\nelse:\n    print(\"Not an Alphabet\")\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nvar isAlphabet = regexp.MustCompile(`^[a-zA-Z]`).MatchString\n\nfunc main() {\n\tvar str string\n\tfmt.Print(\"Input a character: \")\n\tfmt.Scan(&str)\n\t\n\tif (isAlphabet(str)) {\n\t\tfmt.Println(\"Alphabet\")\n\t} else {\n\t\tfmt.Println(\"Non Alphabet\")\n\t}\n}\n```\n\n```php\n<?php\n\nfunction check_alphabet($text)\n{\n\treturn ctype_alpha($text);\n}\n\necho check_alphabet('a') ? 'Alphabet' : 'Non Alphabet';\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-27T05:43:23Z"}