{"slug":"calculate-compound-interest","title":"Calculate compound interest","trackId":1354,"tags":["C","C++","Java","JavaScript","Ruby","Python"],"contributors":["harshraj8843","ShivamK2002","jfinley6","hi-Kartik2004","sharvil1205","joao-vitor-souza","grraghav120","shivampipalwa","KaptainCS3"],"contentHtml":"<h2>Write a program to calculate compound interest</h2>\n<p>Compound interest = principal amount * (1 + rate of interest) ^ time</p>\n<pre><code>Principal : 1000\nRate      : 10\nTime      : 5\n\nCompound interest : 1610.51\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;math.h>\nint main()\n{\n    float CI, rate, PA, time;\n    printf(\"Enter principal amount :\");\n    scanf(\"%f\", &#x26;PA);\n    printf(\"Enter the rate :\");\n    scanf(\"%f\", &#x26;rate);\n    printf(\"Enter time :\");\n    scanf(\"%f\", &#x26;time);\n    // formula to calculate compound interest\n    CI = PA * (pow((1 + rate / 100), time));\n\n    printf(\"Compound interest : %0.2f\\n\", CI);\n    return 0;\n}\n</code></pre>\n<pre><code>#include&#x3C;bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    // declaring variables\n    // p=Principal amount\n    // r=Rate of interest\n    // t=time\n    // ci=compound interest\n    long double p,r,t,ci;\n    \n    // take input\n    cout&#x3C;&#x3C;\"Enter Principal amount : \";\n    cin>>p;\n    cout&#x3C;&#x3C;\"\\n\";  \n    cout&#x3C;&#x3C;\"Enter Rate of interest : \";\n    cin>>r;\n    cout&#x3C;&#x3C;\"\\n\";\n    cout&#x3C;&#x3C;\"Enter time : \";\n    cin>>t;\n    cout&#x3C;&#x3C;\"\\n\";\n    \n    // Compound interest = principal amount * (1 + rate of interest) ^ time\n    ci= p * pow((1+(r/100)),t);\n    \n    cout&#x3C;&#x3C;\"Compound Interest = \";\n    cout&#x3C;&#x3C;ci;\n  \n}\n</code></pre>\n<pre><code>import java.util.*;\nclass compoundInterest\n{\n   public static void main (String args[])\n   {\n      double principal, rate, time, compound_interest;\n      Scanner sc = new Scanner(System.in);\n      System.out.print(\"Enter Principle amount : \");\n      principal = sc.nextInt();\n      System.out.print(\"Enter Interest rate : \");\n      rate = sc.nextInt();\n      System.out.print(\"Enter Time period in years : \");\n      time = sc.nextInt();\n      compound_interest = principal * (Math.pow((1 + rate / 100), time));\n      System.out.println(\"The Compound Interest is : \" + compound_interest);\n   }\n}\n</code></pre>\n<pre><code>function calculateCompoundInterest(principal, rate, time) {\n  const compoundFactor = 1 + rate / 100;\n\n  const compoundInterest = principal * Math.pow(compoundFactor, time);\n  return compoundInterest;\n}\nconsole.log(calculateCompoundInterest(1000, 10, 5));\n</code></pre>\n<pre><code>puts \"Please enter principal: \"\nprincipal_input = gets.to_f\nputs \"Please enter rate: \"\nrate_input = gets.to_f\nputs \"Please enter time: \"\ntime_input = gets.to_f\n\ndef calculateCompoundInterest principal, rate, time\n    (principal * (1+(rate/100))**time).round(2)\nend\n\nputs calculateCompoundInterest(principal_input, rate_input, time_input)\n</code></pre>\n<pre><code>principal = int(input())\nrate = int(input())\ntime = int(input())\nprint(round(principal * ((1 + rate / 100) ** time), 2))\n\n# Contributed by Raghav Garg\n</code></pre>\n","markdown":"\n## Write a program to calculate compound interest\n\nCompound interest = principal amount * (1 + rate of interest) ^ time\n\n```txt\nPrincipal : 1000\nRate      : 10\nTime      : 5\n\nCompound interest : 1610.51\n```\n\n---\n\n<CodeBlock slug=\"calculate-compound-interest\" >\n\n```c\n#include <stdio.h>\n#include <math.h>\nint main()\n{\n    float CI, rate, PA, time;\n    printf(\"Enter principal amount :\");\n    scanf(\"%f\", &PA);\n    printf(\"Enter the rate :\");\n    scanf(\"%f\", &rate);\n    printf(\"Enter time :\");\n    scanf(\"%f\", &time);\n    // formula to calculate compound interest\n    CI = PA * (pow((1 + rate / 100), time));\n\n    printf(\"Compound interest : %0.2f\\n\", CI);\n    return 0;\n}\n```\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n    // declaring variables\n    // p=Principal amount\n    // r=Rate of interest\n    // t=time\n    // ci=compound interest\n    long double p,r,t,ci;\n    \n    // take input\n    cout<<\"Enter Principal amount : \";\n    cin>>p;\n    cout<<\"\\n\";  \n    cout<<\"Enter Rate of interest : \";\n    cin>>r;\n    cout<<\"\\n\";\n    cout<<\"Enter time : \";\n    cin>>t;\n    cout<<\"\\n\";\n    \n    // Compound interest = principal amount * (1 + rate of interest) ^ time\n    ci= p * pow((1+(r/100)),t);\n    \n    cout<<\"Compound Interest = \";\n    cout<<ci;\n  \n}\n```\n\n```java\nimport java.util.*;\nclass compoundInterest\n{\n   public static void main (String args[])\n   {\n      double principal, rate, time, compound_interest;\n      Scanner sc = new Scanner(System.in);\n      System.out.print(\"Enter Principle amount : \");\n      principal = sc.nextInt();\n      System.out.print(\"Enter Interest rate : \");\n      rate = sc.nextInt();\n      System.out.print(\"Enter Time period in years : \");\n      time = sc.nextInt();\n      compound_interest = principal * (Math.pow((1 + rate / 100), time));\n      System.out.println(\"The Compound Interest is : \" + compound_interest);\n   }\n}\n```\n\n```js\nfunction calculateCompoundInterest(principal, rate, time) {\n  const compoundFactor = 1 + rate / 100;\n\n  const compoundInterest = principal * Math.pow(compoundFactor, time);\n  return compoundInterest;\n}\nconsole.log(calculateCompoundInterest(1000, 10, 5));\n```\n\n```rb\nputs \"Please enter principal: \"\nprincipal_input = gets.to_f\nputs \"Please enter rate: \"\nrate_input = gets.to_f\nputs \"Please enter time: \"\ntime_input = gets.to_f\n\ndef calculateCompoundInterest principal, rate, time\n    (principal * (1+(rate/100))**time).round(2)\nend\n\nputs calculateCompoundInterest(principal_input, rate_input, time_input)\n```\n\n```py\nprincipal = int(input())\nrate = int(input())\ntime = int(input())\nprint(round(principal * ((1 + rate / 100) ** time), 2))\n\n# Contributed by Raghav Garg\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-14T05:45:09Z"}