{"slug":"find-sum-of-gp-series","title":"Find sum of GP series","trackId":4971,"tags":["C++","Java","TypeScript","Python","Rust"],"contributors":["harshraj8843","pelegsch666","shashankgurunaga1","leslieyip02","Medmly20208","hi-Kartik2004"],"contentHtml":"<h2>Write a program to find sum of gp series</h2>\n<p>A geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed, non-zero number called the common ratio. The nth term of a GP is given by the formula an = a1rn-1 where a1 is the first term and r is the common ratio.</p>\n<pre><code>Input  : 2, 3, 3\nOutput : 54\n</code></pre>\n<hr>\n<pre><code>//Programme to calculate the sum of Gp series.\n// Formula --> (a(r^n - 1))/ (n -1)\n#include &#x3C;bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll solve(){\n\n    return 0;\n}\nint main(){\n    float a,r,n;  \n    // here a--> first number of the Gp series.\n    // r--> common ratio.\n    // n --> the limit of the series.\n\n    //Taking input;\n    cout&#x3C;&#x3C;\"Enter first number of the GP series : \";\n    cin>>a;\n    cout&#x3C;&#x3C;\"Enter the common ratio of the GP series : \";\n    cin>>r;\n    cout&#x3C;&#x3C;\"Enter the length of the series : \";\n    cin>>n;\n    \n    // Calculations;\n    float power = pow(r,n);\n    float ans = (a*(power - 1)/(n-1)); \n\n    //Return ans;\n    cout&#x3C;&#x3C;\"The sum of the given GP series is: \" &#x3C;&#x3C;ans&#x3C;&#x3C;endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/\n</code></pre>\n<pre><code>/* Author: Shashank Gurunaga */\nimport java.lang.Math;\nimport java.util.*;\n\npublic class findgpseriessum {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        float a0, r, i, an;\n        int n;\n        float sum = 0;\n\n        System.out.println(\"Enter the first number in the G.P. series: \");\n        a0 = scanner.nextFloat();\n        System.out.println(\"Enter the number of digits  in the G.P. series \");\n        n = scanner.nextInt();\n        System.out.print(\"Enter the  ratio of G.P. series \");\n        r = scanner.nextFloat();\n\n        sum = (float) ((a0 * (1 - Math.pow(r, n + 1))) / (1 - r));\n        an = (float) (a0 * (1 - Math.pow(r, n - 1)));\n\n        System.out.println(\"nth term of G.P:\" + an);\n        System.out.println(\"Sum of the G.P:\" + sum);\n    }\n}\n</code></pre>\n<pre><code>function sumOfGP(a1: number, r: number, n: number): number {\n\n    // Calculate the sum of the first n terms of the geometric progression\n    const sum = (a1 * (1 - Math.pow(r, n))) / (1 - r);\n\n    return sum;\n}\n\nconsole.log(sumOfGP(2, 3, 3))\n\n//contributed by peleg mazuz\n</code></pre>\n<pre><code>def findSumOfGpSeries(firstNumber, ratio, length):\n    power = pow(ratio, length)\n    ans = firstNumber * (power - 1) / (ratio - 1)\n\n    return ans\n\n\nif __name__ == \"__main__\":\n    firstNumber = float(input(\"give first number:\\n\"))\n    ratio = float(input(\"give ratio:\\n\"))\n    length = float(input(\"give length:\\n\"))\n    print(\"The sum of the given gp series is \")\n    print(findSumOfGpSeries(firstNumber, ratio, length))\n</code></pre>\n<pre><code>fn sum_of_gp(a: u32, r: u32, n: u32) -> u32 {\n    a * (u32::pow(r, n) - 1) / (r - 1)\n}\n\nfn main() {\n    let a = 2;\n    let r = 3;\n    let n = 3;\n\n    println!(\"{}\", sum_of_gp(a, r, n));\n}\n</code></pre>\n","markdown":"\n## Write a program to find sum of gp series\n\nA geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed, non-zero number called the common ratio. The nth term of a GP is given by the formula a<sub>n</sub> = a<sub>1</sub>r<sup>n-1</sup> where a<sub>1</sub> is the first term and r is the common ratio.\n\n```txt\nInput  : 2, 3, 3\nOutput : 54\n```\n\n---\n\n<CodeBlock slug=\"find-sum-of-gp-series\" >\n\n```cpp\n//Programme to calculate the sum of Gp series.\n// Formula --> (a(r^n - 1))/ (n -1)\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll solve(){\n\n    return 0;\n}\nint main(){\n    float a,r,n;  \n    // here a--> first number of the Gp series.\n    // r--> common ratio.\n    // n --> the limit of the series.\n\n    //Taking input;\n    cout<<\"Enter first number of the GP series : \";\n    cin>>a;\n    cout<<\"Enter the common ratio of the GP series : \";\n    cin>>r;\n    cout<<\"Enter the length of the series : \";\n    cin>>n;\n    \n    // Calculations;\n    float power = pow(r,n);\n    float ans = (a*(power - 1)/(n-1)); \n\n    //Return ans;\n    cout<<\"The sum of the given GP series is: \" <<ans<<endl;\n    return 0;\n}\n\n/*\nContributed by : Kartikeya Saini\n*/\n```\n\n```java\n/* Author: Shashank Gurunaga */\nimport java.lang.Math;\nimport java.util.*;\n\npublic class findgpseriessum {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        float a0, r, i, an;\n        int n;\n        float sum = 0;\n\n        System.out.println(\"Enter the first number in the G.P. series: \");\n        a0 = scanner.nextFloat();\n        System.out.println(\"Enter the number of digits  in the G.P. series \");\n        n = scanner.nextInt();\n        System.out.print(\"Enter the  ratio of G.P. series \");\n        r = scanner.nextFloat();\n\n        sum = (float) ((a0 * (1 - Math.pow(r, n + 1))) / (1 - r));\n        an = (float) (a0 * (1 - Math.pow(r, n - 1)));\n\n        System.out.println(\"nth term of G.P:\" + an);\n        System.out.println(\"Sum of the G.P:\" + sum);\n    }\n}\n```\n\n```ts\nfunction sumOfGP(a1: number, r: number, n: number): number {\n\n    // Calculate the sum of the first n terms of the geometric progression\n    const sum = (a1 * (1 - Math.pow(r, n))) / (1 - r);\n\n    return sum;\n}\n\nconsole.log(sumOfGP(2, 3, 3))\n\n//contributed by peleg mazuz\n```\n\n```py\ndef findSumOfGpSeries(firstNumber, ratio, length):\n    power = pow(ratio, length)\n    ans = firstNumber * (power - 1) / (ratio - 1)\n\n    return ans\n\n\nif __name__ == \"__main__\":\n    firstNumber = float(input(\"give first number:\\n\"))\n    ratio = float(input(\"give ratio:\\n\"))\n    length = float(input(\"give length:\\n\"))\n    print(\"The sum of the given gp series is \")\n    print(findSumOfGpSeries(firstNumber, ratio, length))\n```\n\n```rs\nfn sum_of_gp(a: u32, r: u32, n: u32) -> u32 {\n    a * (u32::pow(r, n) - 1) / (r - 1)\n}\n\nfn main() {\n    let a = 2;\n    let r = 3;\n    let n = 3;\n\n    println!(\"{}\", sum_of_gp(a, r, n));\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-23T07:25:43Z"}