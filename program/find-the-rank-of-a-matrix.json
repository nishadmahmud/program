{"slug":"find-the-rank-of-a-matrix","title":"Find the rank of a matrix","trackId":3372,"tags":["JavaScript","Python"],"contributors":["harshraj8843","Petrosdevri","joao-vitor-souza"],"contentHtml":"<h2>Write a program to find the rank of a matrix</h2>\n<p>The rank of a matrix is the dimension of the vector space generated by its columns. The rank of a matrix is also equal to the dimension of the vector space generated by its rows. The rank of a matrix is also equal to the number of pivots in its reduced row echelon form.</p>\n<pre><code>Input  :\n1 2 3\n4 5 6\n7 8 9\n\nOutput :\n2\n</code></pre>\n<hr>\n<pre><code>function getRank(matrix) {\n  let m = matrix.length;\n  let n = matrix[0].length;\n  let rank = Math.min(m,n);\n  let pivot;\n  \n  for(let i=0; i&#x3C;rank; i++) {\n    pivot = matrix[i][i];\n    \n    if(pivot = 0) {\n      for(let j= i+1; j&#x3C;m; j++) {\n        if(matrix[j][i] != 0) {\n          let temp = matrix[i];\n          matrix[i] = matrix[j];\n          matrix[j] = temp;\n          pivot = matrix[i][i];\n          break;\n        }\n      }\n    }\n    \n    if(pivot === 0) {\n      rank--;\n      continue;\n    }\n    \n    for(let j=i; j&#x3C;n; j++) {\n      matrix[i][j] /= pivot;\n    }\n    \n    for(let j=0; j&#x3C;m; j++) {\n      if(j !== i) {\n        let factor = matrix[j][i];\n        for(let k=i; k&#x3C;n; k++) {\n          matrix[j][k] -= factor * matrix[i][k];\n        }\n      }\n    }\n  }  \n  \n  return rank;\n}\n\nconsole.log(getRank([[1,2,3], [4,5,6], [7,8,9]]));\n</code></pre>\n<pre><code>import numpy as np\n\nmatrix = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\nprint(np.linalg.matrix_rank(matrix))  # Output: 2\n</code></pre>\n","markdown":"\n## Write a program to find the rank of a matrix\n\nThe rank of a matrix is the dimension of the vector space generated by its columns. The rank of a matrix is also equal to the dimension of the vector space generated by its rows. The rank of a matrix is also equal to the number of pivots in its reduced row echelon form.\n\n```txt\nInput  :\n1 2 3\n4 5 6\n7 8 9\n\nOutput :\n2\n```\n\n---\n\n<CodeBlock slug=\"find-the-rank-of-a-matrix\" >\n\n```js\nfunction getRank(matrix) {\n  let m = matrix.length;\n  let n = matrix[0].length;\n  let rank = Math.min(m,n);\n  let pivot;\n  \n  for(let i=0; i<rank; i++) {\n    pivot = matrix[i][i];\n    \n    if(pivot = 0) {\n      for(let j= i+1; j<m; j++) {\n        if(matrix[j][i] != 0) {\n          let temp = matrix[i];\n          matrix[i] = matrix[j];\n          matrix[j] = temp;\n          pivot = matrix[i][i];\n          break;\n        }\n      }\n    }\n    \n    if(pivot === 0) {\n      rank--;\n      continue;\n    }\n    \n    for(let j=i; j<n; j++) {\n      matrix[i][j] /= pivot;\n    }\n    \n    for(let j=0; j<m; j++) {\n      if(j !== i) {\n        let factor = matrix[j][i];\n        for(let k=i; k<n; k++) {\n          matrix[j][k] -= factor * matrix[i][k];\n        }\n      }\n    }\n  }  \n  \n  return rank;\n}\n\nconsole.log(getRank([[1,2,3], [4,5,6], [7,8,9]]));\n```\n\n```py\nimport numpy as np\n\nmatrix = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\nprint(np.linalg.matrix_rank(matrix))  # Output: 2\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-23T03:32:25Z"}