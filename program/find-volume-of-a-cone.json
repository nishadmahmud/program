{"slug":"find-volume-of-a-cone","title":"Find volume of a cone","trackId":3871,"tags":["C","C++","Java","JavaScript","Kotlin","Swift","TypeScript","C","GO","Kotlin","PHP","Python","Rust","Scala","Swift","Scala","GO","PHP","Rust"],"contributors":["harshraj8843","esivakumar18","lukaszmielczarekdev","jcoppel","sanmay321","castanedadev-edu","Medmly20208"],"contentHtml":"<h2>Write a program to find volume of a cone</h2>\n<p>Volume of cone = 1/3 × π × <code>Radius</code>^2 × <code>Height</code></p>\n<pre><code>Radius : 2\r\nHeight : 3\r\n\r\nVolume : 12.566370614359\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;math.h>\n\ndouble volumeOfCone(double radius, double height) {\n  double volume = 1.0/3.0 * M_PI * pow(radius, 2) * height;\n  return volume;\n}\n\nint main(void) {\n  double coneRadius = 2;\n  double coneHeight = 3;\n  double coneVolume = volumeOfCone(coneRadius, coneHeight);\n\n  printf(\"Volume of cone = %f\\n\", coneVolume);\n\n  return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream> \n#include &#x3C;algorithm> \n#include &#x3C;iomanip>\nusing namespace std;  \nint main()  \n{  \n    double Pi = 3.14285714286;  // Pi = π \n    double Radius, Height; \n    cin>>Radius>>Height;   \n    double ans = Pi*(Radius*Radius)*Height/3;\n    cout &#x3C;&#x3C; fixed &#x3C;&#x3C;setprecision(15);\n    cout&#x3C;&#x3C;ans;\n    return 0;  \n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\npublic class FindVolumeOfACone {\n    public static void main(String[] args) {\n        double radius, height, volume = 0;\n        Scanner sc = new Scanner(System.in);\n\n        do {\n            System.out.print(\"Radius: \");\n            while (!sc.hasNextDouble()) {\n                System.out.print(\"Oops! That's not a number! \\nRadius: \");\n                sc.next();\n            }\n            radius = sc.nextDouble();\n        } while (radius &#x3C;= 0.0d);\n\n        do {\n            System.out.print(\"Height: \");\n            while (!sc.hasNextDouble()) {\n                System.out.print(\"Oops! That's not a number! \\nHeight: \");\n                sc.next();\n            }\n            height = sc.nextDouble();\n        } while (height &#x3C;= 0.0d);\n\n        sc.close();\n\n        volume = Math.PI * Math.pow(radius, 2) * (height / 3);\n\n        System.out.printf(\"\\nVolume : %f\", volume);\n    }\n}\n</code></pre>\n<pre><code>function findVolumeOfACone(radius, height) {\n    // Find volume using this formula:\n    // V = 1/3 × π × Radius^2 × Height\n    return (1/3) * Math.PI * (radius ** 2) * height;\n}\n\nfindVolumeOfACone(2, 3);\n</code></pre>\n<pre><code>import kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array&#x3C;String>) {\n  val scanner = Scanner(System.`in`)\n  val radius = scanner.nextDouble()\n  val height = scanner.nextDouble()\n\n  val volume = 1.0/3.0 * PI * radius * radius * height\n  println(volume)\n}\n</code></pre>\n<pre><code>import Swift\nimport Foundation\n\nvar radius = 2.0;\nvar height = 3.0;\n\nvar volume = 1.0/3.0 * M_PI * radius * radius * height;\nprint(\"Volume of cone: \", volume)\n</code></pre>\n<pre><code>const findVolumeOfACone = (radius: number, height: number) =>\n  (Math.PI * radius ** 2 * height) / 3.0;\n\nconsole.log(findVolumeOfACone(2, 3));\n</code></pre>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;math.h>\n\ndouble volumeOfCone(double radius, double height) {\n  double volume = 1.0/3.0 * M_PI * pow(radius, 2) * height;\n  return volume;\n}\n\nint main(void) {\n  double coneRadius = 2;\n  double coneHeight = 3;\n  double coneVolume = volumeOfCone(coneRadius, coneHeight);\n\n  printf(\"Volume of cone = %f\\n\", coneVolume);\n\n  return 0;\n}\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc volumeOfCube(r float64, h float64) float64 {\n\treturn  1.0/3.0 * math.Pi * r * r * h\n}\n\nfunc main() {\n\tvar r, h, volume float64\n\n\tfmt.Println(\"Enter radius : \")\n\tfmt.Scan(&#x26;r)\n\tfmt.Println(\"Enter height : \")\n\tfmt.Scan(&#x26;h)\n\n\tvolume = volumeOfCube(r, h)\n\n\tfmt.Println(\"\\nVolume : \", volume)\n}\n</code></pre>\n<pre><code>import kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array&#x3C;String>) {\n  val scanner = Scanner(System.`in`)\n  val radius = scanner.nextDouble()\n  val height = scanner.nextDouble()\n\n  val volume = 1.0/3.0 * PI * radius * radius * height\n  println(volume)\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\t$x = readline('Enter cone radius: ');\n\t$y = readline('Enter cone height: ');\n\n  $x1 = 1/3 * pi() * $x * $x * $y;\n  echo \"Volume of Cone: $x1 \\n\";\n?>\n</code></pre>\n<pre><code>import math\n\n\ndef FindVolumeOfACone(radius: float, height: float) -> float:\n    \"\"\"\n    find volume of a cone\n    Arguments:\n        radius: a float\n        height: a float\n    Returns:\n        The volume of a cone : a float\n    \"\"\"\n\n    return (1 / 3) * math.pi * math.pow(radius, 2) * height\n\n\nif __name__ == \"__main__\":\n    radius = float(input(\"Radius: \"))\n    height = float(input(\"Height: \"))\n    print(\"Volume:\", FindVolumeOfACone(radius, height))\n</code></pre>\n<pre><code>fn main() {\n    let radius = 2.0;\n    let height = 3.0;\n    let volume = (1.0/3.0) * 3.14 * radius * radius * height;\n\n    println!(\"Volume of cone is {0}\", volume as f32);\n}\n</code></pre>\n<pre><code>object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val Pi = java.lang.Math.PI;\n\t  val radius = scala.io.StdIn.readDouble();\n\t  val height = scala.io.StdIn.readDouble();\n\t  val volume = (1.0/3.0) * Pi * radius * radius * height;\n\t  println(\"volume of the cone: \" + volume);\n\t}\n}\n</code></pre>\n<pre><code>import Swift\nimport Foundation\n\nvar radius = 2.0;\nvar height = 3.0;\n\nvar volume = 1.0/3.0 * M_PI * radius * radius * height;\nprint(\"Volume of cone: \", volume)\n</code></pre>\n<pre><code>object HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val Pi = java.lang.Math.PI;\n\t  val radius = scala.io.StdIn.readDouble();\n\t  val height = scala.io.StdIn.readDouble();\n\t  val volume = (1.0/3.0) * Pi * radius * radius * height;\n\t  println(\"volume of the cone: \" + volume);\n\t}\n}\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc volumeOfCube(r float64, h float64) float64 {\n\treturn  1.0/3.0 * math.Pi * r * r * h\n}\n\nfunc main() {\n\tvar r, h, volume float64\n\n\tfmt.Println(\"Enter radius : \")\n\tfmt.Scan(&#x26;r)\n\tfmt.Println(\"Enter height : \")\n\tfmt.Scan(&#x26;h)\n\n\tvolume = volumeOfCube(r, h)\n\n\tfmt.Println(\"\\nVolume : \", volume)\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\t$x = readline('Enter cone radius: ');\n\t$y = readline('Enter cone height: ');\n\n  $x1 = 1/3 * pi() * $x * $x * $y;\n  echo \"Volume of Cone: $x1 \\n\";\n?>\n</code></pre>\n<pre><code>fn main() {\n    let radius = 2.0;\n    let height = 3.0;\n    let volume = (1.0/3.0) * 3.14 * radius * radius * height;\n\n    println!(\"Volume of cone is {0}\", volume as f32);\n}\n</code></pre>\n","markdown":"\r\n## Write a program to find volume of a cone\r\n\r\nVolume of cone = 1/3 × π × `Radius`^2 × `Height`\r\n\r\n```txt\r\nRadius : 2\r\nHeight : 3\r\n\r\nVolume : 12.566370614359\r\n```\r\n\r\n---\n\n<CodeBlock slug=\"find-volume-of-a-cone\" >\n\n```c\n#include <stdio.h>\n#include <math.h>\n\ndouble volumeOfCone(double radius, double height) {\n  double volume = 1.0/3.0 * M_PI * pow(radius, 2) * height;\n  return volume;\n}\n\nint main(void) {\n  double coneRadius = 2;\n  double coneHeight = 3;\n  double coneVolume = volumeOfCone(coneRadius, coneHeight);\n\n  printf(\"Volume of cone = %f\\n\", coneVolume);\n\n  return 0;\n}\n```\n\n```cpp\n#include <iostream> \n#include <algorithm> \n#include <iomanip>\nusing namespace std;  \nint main()  \n{  \n    double Pi = 3.14285714286;  // Pi = π \n    double Radius, Height; \n    cin>>Radius>>Height;   \n    double ans = Pi*(Radius*Radius)*Height/3;\n    cout << fixed <<setprecision(15);\n    cout<<ans;\n    return 0;  \n}\n```\n\n```java\nimport java.util.Scanner;\n\npublic class FindVolumeOfACone {\n    public static void main(String[] args) {\n        double radius, height, volume = 0;\n        Scanner sc = new Scanner(System.in);\n\n        do {\n            System.out.print(\"Radius: \");\n            while (!sc.hasNextDouble()) {\n                System.out.print(\"Oops! That's not a number! \\nRadius: \");\n                sc.next();\n            }\n            radius = sc.nextDouble();\n        } while (radius <= 0.0d);\n\n        do {\n            System.out.print(\"Height: \");\n            while (!sc.hasNextDouble()) {\n                System.out.print(\"Oops! That's not a number! \\nHeight: \");\n                sc.next();\n            }\n            height = sc.nextDouble();\n        } while (height <= 0.0d);\n\n        sc.close();\n\n        volume = Math.PI * Math.pow(radius, 2) * (height / 3);\n\n        System.out.printf(\"\\nVolume : %f\", volume);\n    }\n}\n```\n\n```js\nfunction findVolumeOfACone(radius, height) {\n    // Find volume using this formula:\n    // V = 1/3 × π × Radius^2 × Height\n    return (1/3) * Math.PI * (radius ** 2) * height;\n}\n\nfindVolumeOfACone(2, 3);\n```\n\n```kt\nimport kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array<String>) {\n  val scanner = Scanner(System.`in`)\n  val radius = scanner.nextDouble()\n  val height = scanner.nextDouble()\n\n  val volume = 1.0/3.0 * PI * radius * radius * height\n  println(volume)\n}\n```\n\n```swift\nimport Swift\nimport Foundation\n\nvar radius = 2.0;\nvar height = 3.0;\n\nvar volume = 1.0/3.0 * M_PI * radius * radius * height;\nprint(\"Volume of cone: \", volume)\n```\n\n```ts\nconst findVolumeOfACone = (radius: number, height: number) =>\n  (Math.PI * radius ** 2 * height) / 3.0;\n\nconsole.log(findVolumeOfACone(2, 3));\n```\n\n```c\n#include <stdio.h>\n#include <math.h>\n\ndouble volumeOfCone(double radius, double height) {\n  double volume = 1.0/3.0 * M_PI * pow(radius, 2) * height;\n  return volume;\n}\n\nint main(void) {\n  double coneRadius = 2;\n  double coneHeight = 3;\n  double coneVolume = volumeOfCone(coneRadius, coneHeight);\n\n  printf(\"Volume of cone = %f\\n\", coneVolume);\n\n  return 0;\n}\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc volumeOfCube(r float64, h float64) float64 {\n\treturn  1.0/3.0 * math.Pi * r * r * h\n}\n\nfunc main() {\n\tvar r, h, volume float64\n\n\tfmt.Println(\"Enter radius : \")\n\tfmt.Scan(&r)\n\tfmt.Println(\"Enter height : \")\n\tfmt.Scan(&h)\n\n\tvolume = volumeOfCube(r, h)\n\n\tfmt.Println(\"\\nVolume : \", volume)\n}\n```\n\n```kt\nimport kotlin.math.PI\nimport java.util.Scanner\n\nfun main(args: Array<String>) {\n  val scanner = Scanner(System.`in`)\n  val radius = scanner.nextDouble()\n  val height = scanner.nextDouble()\n\n  val volume = 1.0/3.0 * PI * radius * radius * height\n  println(volume)\n}\n```\n\n```php\n<?php\n\t$x = readline('Enter cone radius: ');\n\t$y = readline('Enter cone height: ');\n\n  $x1 = 1/3 * pi() * $x * $x * $y;\n  echo \"Volume of Cone: $x1 \\n\";\n?>\n```\n\n```py\nimport math\n\n\ndef FindVolumeOfACone(radius: float, height: float) -> float:\n    \"\"\"\n    find volume of a cone\n    Arguments:\n        radius: a float\n        height: a float\n    Returns:\n        The volume of a cone : a float\n    \"\"\"\n\n    return (1 / 3) * math.pi * math.pow(radius, 2) * height\n\n\nif __name__ == \"__main__\":\n    radius = float(input(\"Radius: \"))\n    height = float(input(\"Height: \"))\n    print(\"Volume:\", FindVolumeOfACone(radius, height))\n```\n\n```rs\nfn main() {\n    let radius = 2.0;\n    let height = 3.0;\n    let volume = (1.0/3.0) * 3.14 * radius * radius * height;\n\n    println!(\"Volume of cone is {0}\", volume as f32);\n}\n```\n\n```scala\nobject HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val Pi = java.lang.Math.PI;\n\t  val radius = scala.io.StdIn.readDouble();\n\t  val height = scala.io.StdIn.readDouble();\n\t  val volume = (1.0/3.0) * Pi * radius * radius * height;\n\t  println(\"volume of the cone: \" + volume);\n\t}\n}\n```\n\n```swift\nimport Swift\nimport Foundation\n\nvar radius = 2.0;\nvar height = 3.0;\n\nvar volume = 1.0/3.0 * M_PI * radius * radius * height;\nprint(\"Volume of cone: \", volume)\n```\n\n```scala\nobject HelloWorld {\n\tdef main(args: Array[String]): Unit = {\n\t  val Pi = java.lang.Math.PI;\n\t  val radius = scala.io.StdIn.readDouble();\n\t  val height = scala.io.StdIn.readDouble();\n\t  val volume = (1.0/3.0) * Pi * radius * radius * height;\n\t  println(\"volume of the cone: \" + volume);\n\t}\n}\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc volumeOfCube(r float64, h float64) float64 {\n\treturn  1.0/3.0 * math.Pi * r * r * h\n}\n\nfunc main() {\n\tvar r, h, volume float64\n\n\tfmt.Println(\"Enter radius : \")\n\tfmt.Scan(&r)\n\tfmt.Println(\"Enter height : \")\n\tfmt.Scan(&h)\n\n\tvolume = volumeOfCube(r, h)\n\n\tfmt.Println(\"\\nVolume : \", volume)\n}\n```\n\n```php\n<?php\n\t$x = readline('Enter cone radius: ');\n\t$y = readline('Enter cone height: ');\n\n  $x1 = 1/3 * pi() * $x * $x * $y;\n  echo \"Volume of Cone: $x1 \\n\";\n?>\n```\n\n```rs\nfn main() {\n    let radius = 2.0;\n    let height = 3.0;\n    let volume = (1.0/3.0) * 3.14 * radius * radius * height;\n\n    println!(\"Volume of cone is {0}\", volume as f32);\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-03-06T05:12:10Z"}