{"slug":"print-ascii-value-of-a-character","title":"Print ASCII value of a character","trackId":4137,"tags":["C","C++","JavaScript","Kotlin","Ruby","TypeScript","Python","Scala","GO","PHP"],"contributors":["anandfresh","vedantpople4","harshraj8843","cacti23","jfinley6","kishoredubey","joao-vitor-souza","kituuu","Greeshma-frontier","amitbatra31"],"contentHtml":"<h2>Write a program to print ascii value of a character</h2>\n<p>ASCII value is the numeric representation of a character. For example, the ASCII value of the character 'A' is 65. The ASCII value of the character 'a' is 97. The ASCII value of the character '0' is 48. The ASCII value of the character ' ' is 32.</p>\n<pre><code>Input  : A\nOutput : 65\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;setjmp.h> // For Exception Handling in C\n\njmp_buf savebuff;\n\n#define TRY if (setjmp(savebuff) == 0)\n#define CATCH else\n\n// Declaring a function with exception handling\nint printAscii(char c);\n\n// Main function\nint main()\n{\n    char ch;                         // Declaring Variable\n    printf(\"Enter a character: \\n\"); // Input prompt\n    scanf(\"%c\", &#x26;ch);                // Reading input\n\n    TRY\n    {\n        printf(\"The ASCII value of given character is %d\", printAscii(ch));\n    }\n    CATCH\n    {\n        printf(\"ERROR!!! invalid input.\\n\");\n    }\n\n    return 0;\n}\n\nint printAscii(char c)\n{\n    int ascii = (int)c;\n    if (ascii &#x3C; 0 || ascii > 127)\n    {\n        longjmp(savebuff, 1);\n    }\n\n    return ascii;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\n\nint main() {\n  std::string s;\n\n  std:: cout &#x3C;&#x3C; \"Enter the single character: \";\n\n  std::getline(std::cin, s);\n\n  if(s.length() > 1) {\n    std::cout &#x3C;&#x3C; \"Error: enter a single character only\" &#x3C;&#x3C; std::endl;\n    return 1;\n  }\n\n  std:: cout &#x3C;&#x3C; (int) s[0] &#x3C;&#x3C; std:: endl;\n\n  return 0;\n}\n</code></pre>\n<pre><code>function asciiValueOfCharacter(str) {\n    let asciiValue = str.charCodeAt(0);\n    console.log(asciiValue);\n}\n\nasciiValueOfCharacter(\"A\");\n</code></pre>\n<pre><code>fun main() {\n    print(ascii('Z'))\n}\nfun ascii(first: Char) = first.code\n</code></pre>\n<pre><code>def printAsciiValueOfACharacter str\n    puts str.ord\nend\n\nprintAsciiValueOfACharacter \"A\"\n</code></pre>\n<pre><code>function asciiValueOfCharacter(str: string) {\n    let asciiValue = str.charCodeAt(0);\n    console.log(asciiValue);\n}\n\nasciiValueOfCharacter(\"A\");\n</code></pre>\n<pre><code>ch = input(\"Enter character\")\nascii_code = ord(ch)\nprint(ascii_code)\n</code></pre>\n<pre><code>object Ascii{  \n    def main(args:Array[String]):Unit={  \n        var ch:Char='A'\n        println(\"Character value: \"+ch)\n        println(\"ASCII value    : \"+ch.toInt)\n    }  \n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar str string\n\tfmt.Scanf(\"%s\", &#x26;str)\n\tfor i := 0; i &#x3C; len(str); i++ {\n\t\tfmt.Printf(\"%d\", str[i])\n\t}\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction asciiValue($str) {\n   return ord($str);\n}\n\necho asciiValue(\"A\");\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to print ascii value of a character\n\nASCII value is the numeric representation of a character. For example, the ASCII value of the character 'A' is 65. The ASCII value of the character 'a' is 97. The ASCII value of the character '0' is 48. The ASCII value of the character ' ' is 32.\n\n```txt\nInput  : A\nOutput : 65\n```\n\n---\n\n<CodeBlock slug=\"print-ascii-value-of-a-character\" >\n\n```c\n#include <stdio.h>\n#include <setjmp.h> // For Exception Handling in C\n\njmp_buf savebuff;\n\n#define TRY if (setjmp(savebuff) == 0)\n#define CATCH else\n\n// Declaring a function with exception handling\nint printAscii(char c);\n\n// Main function\nint main()\n{\n    char ch;                         // Declaring Variable\n    printf(\"Enter a character: \\n\"); // Input prompt\n    scanf(\"%c\", &ch);                // Reading input\n\n    TRY\n    {\n        printf(\"The ASCII value of given character is %d\", printAscii(ch));\n    }\n    CATCH\n    {\n        printf(\"ERROR!!! invalid input.\\n\");\n    }\n\n    return 0;\n}\n\nint printAscii(char c)\n{\n    int ascii = (int)c;\n    if (ascii < 0 || ascii > 127)\n    {\n        longjmp(savebuff, 1);\n    }\n\n    return ascii;\n}\n```\n\n```cpp\n#include <iostream>\n\nint main() {\n  std::string s;\n\n  std:: cout << \"Enter the single character: \";\n\n  std::getline(std::cin, s);\n\n  if(s.length() > 1) {\n    std::cout << \"Error: enter a single character only\" << std::endl;\n    return 1;\n  }\n\n  std:: cout << (int) s[0] << std:: endl;\n\n  return 0;\n}\n```\n\n```js\nfunction asciiValueOfCharacter(str) {\n    let asciiValue = str.charCodeAt(0);\n    console.log(asciiValue);\n}\n\nasciiValueOfCharacter(\"A\");\n```\n\n```kt\nfun main() {\n    print(ascii('Z'))\n}\nfun ascii(first: Char) = first.code\n```\n\n```rb\ndef printAsciiValueOfACharacter str\n    puts str.ord\nend\n\nprintAsciiValueOfACharacter \"A\"\n```\n\n```ts\nfunction asciiValueOfCharacter(str: string) {\n    let asciiValue = str.charCodeAt(0);\n    console.log(asciiValue);\n}\n\nasciiValueOfCharacter(\"A\");\n```\n\n```py\nch = input(\"Enter character\")\nascii_code = ord(ch)\nprint(ascii_code)\n```\n\n```scala\nobject Ascii{  \n    def main(args:Array[String]):Unit={  \n        var ch:Char='A'\n        println(\"Character value: \"+ch)\n        println(\"ASCII value    : \"+ch.toInt)\n    }  \n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar str string\n\tfmt.Scanf(\"%s\", &str)\n\tfor i := 0; i < len(str); i++ {\n\t\tfmt.Printf(\"%d\", str[i])\n\t}\n}\n```\n\n```php\n<?php\n\nfunction asciiValue($str) {\n   return ord($str);\n}\n\necho asciiValue(\"A\");\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-19T16:27:01Z"}