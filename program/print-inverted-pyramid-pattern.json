{"slug":"print-inverted-pyramid-pattern","title":"Print inverted pyramid pattern","trackId":4979,"tags":["C","C++","Java","JavaScript","Ruby","TypeScript","Python"],"contributors":["harshraj8843","Medmly20208","txsnxm","anandfresh","SarthakSanjay","jfinley6"],"contentHtml":"<h2>Write a program to print inverted pyramid pattern</h2>\n<pre><code>Input   : 5\n\nOutput : \n1 2 3 4 5\n1 2 3 4 \n1 2 3\n1 2\n1\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nint main()\n{\n\n    int number, i, j, limitNumber;\n    printf(\"enter a number\");\n    scanf(\"%d\", &#x26;number);\n\n    limitNumber = number;\n\n    for (i = 1; i &#x3C;= number; i++)\n    {\n\n        for (j = 1; j &#x3C;= limitNumber; j++)\n        {\n            printf(\"%d \", j);\n        }\n        printf(\"\\n\");\n\n        limitNumber--;\n    }\n\n    return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\n\nint main()\n{\n    // Write C++ code here\n    int input, i, j, edge;\n\n    std::cout &#x3C;&#x3C; \"input a number : \" &#x3C;&#x3C; std::endl;\n    std::cin >> input;\n\n    edge = input;\n\n    for (i = 1; i &#x3C;= input; i++)\n    {\n        for (j = 1; j &#x3C;= edge; j++)\n        {\n            std::cout &#x3C;&#x3C; j &#x3C;&#x3C; \" \";\n        }\n\n        std::cout &#x3C;&#x3C; \"\\n\";\n\n        edge = edge - 1;\n    }\n\n    return 0;\n}\n</code></pre>\n<pre><code>import java.util.*;\npublic class PrintInvertedPyramidPattern {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        sc.close();\n        for (int i = t; i > 0; i--) {\n            for (int j = 1; j &#x3C; i + 1; j++) {\n                System.out.print(j + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n</code></pre>\n<pre><code>//inverted pyramid\nfor(let a = 5;a>=1;a--){\n    let str =' '\n    for(let i = 1;i&#x3C;=a;i++){\n        str+=i + \" \"\n    }\n    console.log(str)\n}\n</code></pre>\n<pre><code>puts \"Enter the inverted pyramid number to display: \"\nuser_input = gets.to_i\ndef printInvertedPyramidPattern number\n    (1..number).each { |i| print \"#{i} \"}\n    puts\n    printInvertedPyramidPattern(number - 1) if number > 0 \nend\n\nprintInvertedPyramidPattern user_input\n</code></pre>\n<pre><code>const invertedPyramid = (num: number): number => {\n  for(let n = num ;n>=1;n--){\n      let str ='';\n      for(let i = 1;i&#x3C;=n;i++){\n          str+=i + \" \"\n      }\n      console.log(str)\n  }\n}\n\ninvertedPyramid(5);\n</code></pre>\n<pre><code># print inverted pyramid pattern\n\n\ndef printInvertedPyramidPattern(number: int):\n    endNumber = number\n\n    for i in range(0, number):\n        for j in range(1, endNumber + 1):\n            print(j, end=\" \")\n\n        print(\"\")\n        endNumber = endNumber - 1\n\n\nif __name__ == \"__main__\":\n    number = int(input(\"type a number:\"))\n    printInvertedPyramidPattern(number)\n</code></pre>\n","markdown":"\n## Write a program to print inverted pyramid pattern\n\n```txt\nInput   : 5\n\nOutput : \n1 2 3 4 5\n1 2 3 4 \n1 2 3\n1 2\n1\n```\n\n---\n\n<CodeBlock slug=\"print-inverted-pyramid-pattern\" >\n\n```c\n#include <stdio.h>\n\nint main()\n{\n\n    int number, i, j, limitNumber;\n    printf(\"enter a number\");\n    scanf(\"%d\", &number);\n\n    limitNumber = number;\n\n    for (i = 1; i <= number; i++)\n    {\n\n        for (j = 1; j <= limitNumber; j++)\n        {\n            printf(\"%d \", j);\n        }\n        printf(\"\\n\");\n\n        limitNumber--;\n    }\n\n    return 0;\n}\n```\n\n```cpp\n#include <iostream>\n\nint main()\n{\n    // Write C++ code here\n    int input, i, j, edge;\n\n    std::cout << \"input a number : \" << std::endl;\n    std::cin >> input;\n\n    edge = input;\n\n    for (i = 1; i <= input; i++)\n    {\n        for (j = 1; j <= edge; j++)\n        {\n            std::cout << j << \" \";\n        }\n\n        std::cout << \"\\n\";\n\n        edge = edge - 1;\n    }\n\n    return 0;\n}\n```\n\n```java\nimport java.util.*;\npublic class PrintInvertedPyramidPattern {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        sc.close();\n        for (int i = t; i > 0; i--) {\n            for (int j = 1; j < i + 1; j++) {\n                System.out.print(j + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n```\n\n```js\n//inverted pyramid\nfor(let a = 5;a>=1;a--){\n    let str =' '\n    for(let i = 1;i<=a;i++){\n        str+=i + \" \"\n    }\n    console.log(str)\n}\n```\n\n```rb\nputs \"Enter the inverted pyramid number to display: \"\nuser_input = gets.to_i\ndef printInvertedPyramidPattern number\n    (1..number).each { |i| print \"#{i} \"}\n    puts\n    printInvertedPyramidPattern(number - 1) if number > 0 \nend\n\nprintInvertedPyramidPattern user_input\n```\n\n```ts\nconst invertedPyramid = (num: number): number => {\n  for(let n = num ;n>=1;n--){\n      let str ='';\n      for(let i = 1;i<=n;i++){\n          str+=i + \" \"\n      }\n      console.log(str)\n  }\n}\n\ninvertedPyramid(5);\n```\n\n```py\n# print inverted pyramid pattern\n\n\ndef printInvertedPyramidPattern(number: int):\n    endNumber = number\n\n    for i in range(0, number):\n        for j in range(1, endNumber + 1):\n            print(j, end=\" \")\n\n        print(\"\")\n        endNumber = endNumber - 1\n\n\nif __name__ == \"__main__\":\n    number = int(input(\"type a number:\"))\n    printInvertedPyramidPattern(number)\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-02-23T07:25:43Z"}